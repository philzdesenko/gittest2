{"job":{"components":{"1230180":{"id":1230180,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1334993426,"x":480,"y":-80,"width":32,"height":32,"inputConnectorIDs":[1230229],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log End"}}}},"visible":true},"2":{"slot":2,"name":"Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"info"}}}},"visible":true},"3":{"slot":3,"name":"Namespace","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"RDBMS - ${database_type}"}}}},"visible":true},"4":{"slot":4,"name":"Messages","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Pipeline Duration"},"2":{"slot":2,"type":"STRING","value":"${pipeline_duration}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Pipeline End"},"2":{"slot":2,"type":"STRING","value":"${pipeline_status}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230181":{"id":1230181,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-480,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230235],"outputSuccessConnectorIDs":[1230231],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQL Config"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# This script is one part of an older process. \n# It is solely responsible for populating the sqlFlavourConfig grid variable \n# which differ depending on which JDBC Driver is being used \n# Previously this would have been input by the user, but \n# we have since moved to hard-coding the possible entries.\nif database_type in ('Microsoft SQL Server', 'SQL Server (Microsoft Driver)'):\n  start = '['\n  end = ']'\n  limit = 'top'\nelif database_type in ('MySQL', 'MariaDB'):\n  start = '`'\n  end = '`'\n  limit = 'limit'\nelif database_type in ('PostgreSQL', 'Oracle', 'IBM DB2', 'IBM DB2 for i', 'Snowflake', 'Amazon Redshift'):\n  start = '\"'\n  end = '\"'\n  limit = 'rownum' if database_type == 'Oracle' else 'limit'\nelse:\n  raise TypeError(\"Invalid Database Type: {}\".format(database_type))\n  \n  \nsqlConfig = [\n['enclosing_character_start', start],\n['enclosing_character_end', end],\n['limit_type', limit]\n]\n\ncontext.updateGridVariable('sqlFlavourConfig', sqlConfig)\n\ngrid_var = context.getGridVariable('sqlFlavourConfig')\n\nprint('Updated `sqlFlavourConfig`: {!r}'.format(sqlConfig))\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230183":{"id":1230183,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1334993426,"x":-640,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230234],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1230235],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log Pipeline Start"}}}},"visible":true},"2":{"slot":2,"name":"Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"info"}}}},"visible":true},"3":{"slot":3,"name":"Namespace","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"RDBMS - ${database_type}"}}}},"visible":true},"4":{"slot":4,"name":"Messages","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Pipeline Started"},"2":{"slot":2,"type":"STRING","value":"${database_type}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230184":{"id":1230184,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":320,"y":0,"width":32,"height":16,"inputConnectorIDs":[1230230],"outputSuccessConnectorIDs":[1230228],"outputFailureConnectorIDs":[1230232],"outputUnconditionalConnectorIDs":[1230229],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Duration","mapTo":"pipeline_duration"},"2":{"slot":2,"fromId":null,"fromName":"Status","mapTo":"pipeline_status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Source Table Iterator"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"tableNames"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"tableName"},"2":{"slot":2,"type":"STRING","value":"table_name"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${load_concurrent}"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[1230233],"inputIterationConnectorIDs":[]},"1230185":{"id":1230185,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230225],"outputSuccessConnectorIDs":[1230227],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Environment Defaults"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# Script to replace any [Environment Default] entries with the schema name\nif target_platform == \"Redshift\":\n\n    if stage_schema == \"[Environment Default]\":\n        context.updateVariable(\"stage_schema\", environment_default_schema)\n        print(\n            f\"Updating stage_schema from [Environment Default] to: {environment_default_schema}\"\n        )\n\n    if target_schema == \"[Environment Default]\":\n        context.updateVariable(\"target_schema\", environment_default_schema)\n        print(\n            f\"Updating target_schema from [Environment Default] to: {environment_default_schema}\"\n        )\n\nelif target_platform == \"Snowflake\":\n\n    if target_warehouse == \"[Environment Default]\":\n        context.updateVariable(\"target_warehouse\", environment_port)\n        print(\n            f\"Updating target_warehouse from [Environment Default] to: {environment_port}\"\n        )\n\n    if target_database == \"[Environment Default]\":\n        context.updateVariable(\"target_database\", environment_database)\n        print(\n            f\"Updating target_database from [Environment Default] to: {environment_database}\"\n        )\n\n    if target_schema == \"[Environment Default]\":\n        context.updateVariable(\"target_schema\", environment_default_schema)\n        print(\n            f\"Updating target_schema from [Environment Default] to: {environment_default_schema}\"\n        )\n\n    if stage_warehouse == \"[Environment Default]\":\n        context.updateVariable(\"stage_warehouse\", environment_port)\n        print(\n            f\"Updating stage_warehouse from [Environment Default] to: {environment_port}\"\n        )\n\n    if stage_database == \"[Environment Default]\":\n        context.updateVariable(\"stage_database\", environment_database)\n        print(\n            f\"Updating stage_database from [Environment Default] to: {environment_database}\"\n        )\n\n    if stage_schema == \"[Environment Default]\":\n        context.updateVariable(\"stage_schema\", environment_default_schema)\n        print(\n            f\"Updating stage_schema from [Environment Default] to: {environment_default_schema}\"\n        )\n\nelif target_platform == \"BigQuery\":\n\n    if stage_dataset == \"[Environment Default]\":\n        context.updateVariable(\"stage_dataset\", environment_default_schema)\n        print(\n            f\"Updating stage_dataset from [Environment Default] to: {environment_default_schema}\"\n        )\n\n    if target_dataset == \"[Environment Default]\":\n        context.updateVariable(\"target_dataset\", environment_default_schema)\n        print(\n            f\"Updating target_dataset from [Environment Default] to: {environment_default_schema}\"\n        )\n\n    if stage_project == \"[Environment Default]\":\n        context.updateVariable(\"stage_project\", environment_database)\n        print(\n            f\"Updating stage_project from [Environment Default] to: {environment_default_schema}\"\n        )\n\n    if target_project == \"[Environment Default]\":\n        context.updateVariable(\"target_project\", environment_database)\n        print(\n            f\"Updating target_project from [Environment Default] to: {environment_default_schema}\"\n        )\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230186":{"id":1230186,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":320,"y":32,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Retrieval and Load Data"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"JDBC Incremental Load - 2 - Wrapper"}}}},"visible":true},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3_bucket_name"},"2":{"slot":2,"type":"STRING","value":"${s3_bucket_name}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"connection_url"},"2":{"slot":2,"type":"STRING","value":"${connection_url}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"database_type"},"2":{"slot":2,"type":"STRING","value":"${database_type}"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"password_manager_entry"},"2":{"slot":2,"type":"STRING","value":"${password_manager_entry}"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"stage_database"},"2":{"slot":2,"type":"STRING","value":"${stage_database}"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"stage_prefix"},"2":{"slot":2,"type":"STRING","value":"${stage_prefix}"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"stage_schema"},"2":{"slot":2,"type":"STRING","value":"${stage_schema}"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"stage_warehouse"},"2":{"slot":2,"type":"STRING","value":"${stage_warehouse}"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"table_name"},"2":{"slot":2,"type":"STRING","value":"${table_name}"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"target_database"},"2":{"slot":2,"type":"STRING","value":"${target_database}"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"target_prefix"},"2":{"slot":2,"type":"STRING","value":"${target_prefix}"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"target_schema"},"2":{"slot":2,"type":"STRING","value":"${target_schema}"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"target_warehouse"},"2":{"slot":2,"type":"STRING","value":"${target_warehouse}"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"user_name"},"2":{"slot":2,"type":"STRING","value":"${username}"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"target_platform"},"2":{"slot":2,"type":"STRING","value":"${target_platform}"}}},"16":{"slot":16,"values":{"1":{"slot":1,"type":"STRING","value":"target_dataset"},"2":{"slot":2,"type":"STRING","value":"${target_dataset}"}}},"17":{"slot":17,"values":{"1":{"slot":1,"type":"STRING","value":"target_project"},"2":{"slot":2,"type":"STRING","value":"${target_project}"}}},"18":{"slot":18,"values":{"1":{"slot":1,"type":"STRING","value":"stage_dataset"},"2":{"slot":2,"type":"STRING","value":"${stage_dataset}"}}},"19":{"slot":19,"values":{"1":{"slot":1,"type":"STRING","value":"stage_project"},"2":{"slot":2,"type":"STRING","value":"${stage_project}"}}},"20":{"slot":20,"values":{"1":{"slot":1,"type":"STRING","value":"blob_container"},"2":{"slot":2,"type":"STRING","value":"${blob_container}"}}},"21":{"slot":21,"values":{"1":{"slot":1,"type":"STRING","value":"storage_account"},"2":{"slot":2,"type":"STRING","value":"${storage_account}"}}},"22":{"slot":22,"values":{"1":{"slot":1,"type":"STRING","value":"dist_style"},"2":{"slot":2,"type":"STRING","value":"${dist_style}"}}},"23":{"slot":23,"values":{"1":{"slot":1,"type":"STRING","value":"source_schema"},"2":{"slot":2,"type":"STRING","value":"${source_schema}"}}},"24":{"slot":24,"values":{"1":{"slot":1,"type":"STRING","value":"encryption_method"},"2":{"slot":2,"type":"STRING","value":"${encryption_method}"}}},"25":{"slot":25,"values":{"1":{"slot":1,"type":"STRING","value":"kms_key_id"},"2":{"slot":2,"type":"STRING","value":"${kms_key_id}"}}},"26":{"slot":26,"values":{"1":{"slot":1,"type":"STRING","value":"enclosing_character_start"},"2":{"slot":2,"type":"STRING","value":"${enclosing_character_start}"}}},"27":{"slot":27,"values":{"1":{"slot":1,"type":"STRING","value":"enclosing_character_end"},"2":{"slot":2,"type":"STRING","value":"${enclosing_character_end}"}}},"28":{"slot":28,"values":{"1":{"slot":1,"type":"STRING","value":"staging_type"},"2":{"slot":2,"type":"STRING","value":"${staging_type}"}}},"29":{"slot":29,"values":{"1":{"slot":1,"type":"STRING","value":"cloud_storage_area"},"2":{"slot":2,"type":"STRING","value":"${cloud_storage_area}"}}},"30":{"slot":30,"values":{"1":{"slot":1,"type":"STRING","value":"limitedSQLStatement"},"2":{"slot":2,"type":"STRING","value":"${limitedSQLStatement}"}}},"31":{"slot":31,"values":{"1":{"slot":1,"type":"STRING","value":"log_metrics"},"2":{"slot":2,"type":"STRING","value":"${log_metrics}"}}},"32":{"slot":32,"values":{"1":{"slot":1,"type":"STRING","value":"fix_target_data_types"},"2":{"slot":2,"type":"STRING","value":"${fix_target_data_types}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{"1":{"slot":1,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"connectionOptions"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"parameter"},"2":{"slot":2,"type":"GRID","value":"value"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"advanced_connection_options"},"2":{"slot":2,"type":"STRING","value":"grid"}}},"2":{"slot":2,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"sourceList"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"tableName"},"2":{"slot":2,"type":"GRID","value":"columnName"},"3":{"slot":3,"type":"GRID","value":"incrementalColumn"},"4":{"slot":4,"type":"GRID","value":"keyColumn"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"source_list"},"2":{"slot":2,"type":"STRING","value":"grid"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[1230233]},"1230187":{"id":1230187,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":480,"y":80,"width":32,"height":32,"inputConnectorIDs":[1230232],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230188":{"id":1230188,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230231],"outputSuccessConnectorIDs":[1230224],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Validate Config"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# These parameters will be passed in by the user through the `sqlFlavourConfig` Grid Variable \n# A Grid Variable is used to allow us to easily add/remove variables without needing to change \n# the slots of the Shared Job\n# More configuration options can easily be added using this method \nREQUIRED_PARAMETERS = {\n  \t# parameter name \t\t\t\t: \tpossible values (empty list means no restrictions)\n\t'enclosing_character_start' \t:\t[],\n  \t'enclosing_character_end'\t\t: \t[],\n  \t\t\t\t\t\t\t\t\t\t# these values are the same as jdbc-providers.properties \n  \t\t\t\t\t\t\t\t\t\t# to be more consistent\n  \t'limit_type'\t\t\t\t\t:\t['rownum', 'top-n', 'limit-outer', 'fetch-first-n', 'limit-inline', 'limit', 'top'],\n}\t\n\n\n# ParameterConfigError is raised when there is an issue with the parameters supplied via \n# `sqlFlavourConfig`\n# Custom class is used to wrap all the errors into a single Exception \nclass ParameterConfigError(Exception):\n  \n  # missing_params should be a list of parameters that are missing \n  # invalid_params should be a list of (parameters, expected, value) trips that are invalid \n\tdef __init__(self, missing_params = [], invalid_params = []):\n    \n\t\tmsg = \"\\nParameter Configuration Error, please check Grid Variable `sqlFlavourConfig`:\\n\"\n\t\tif missing_params:\n\t\t\tmissing_msg = \" ,\".join(missing_params)\n\t\t\tmsg += \"The following parameters are missing: {}\\n\".format(missing_msg)\n\n\t\tif invalid_params:\n\t\t\tinvalid_msg = \",\\n\".join([\" + {} - expected {}, but got {}\".format(*x) for x in invalid_params])\n\t\t\tmsg += \"The following parameters have been configured incorrectly:\\n{}\\n\".format(invalid_msg)\n\n\t\tsuper(ParameterConfigError, self).__init__(msg)\n    \n    \nconfig_dict = { param: val for param, val in context.getGridVariable('sqlFlavourConfig') }\n\nmissing_params = []\ninvalid_params = []\n\n# iterate over the required parameters, ensure they have been supplied and,\n# where applicable, check the value is allowed \nfor param, expected in REQUIRED_PARAMETERS.items():\n\t# if the parameter has not been specified, add it to a list of missing params \n\t# to raise an exception after \n\tif not param in config_dict:\n\t\tmissing_params.append(param)\n\t\tcontinue\n        \n\telse:\n\t\tvalue = config_dict[param].lower()\n\t\t\n        # check if there is an expected value, and ensure that the value supplied \n        # is allowed \n\t\tif expected and (value not in expected):\n\t\t\texpected_msg = \", \".join(expected)\n\t\t\tinvalid_params.append( (param, expected_msg,value) )\n\t\t\tcontinue\n            \n        # otherwise, if no expected is specified, ensure that the value is not empty \n\t\tif value == \"\":\n\t\t\tinvalid_params.append( (param, \"something\", value) )\n            \n\tcontext.updateVariable(param, value)\n\tprint(\"Updated Variable `{}`: {}\".format(param, value)) \n\tvalue = None\n\nif missing_params or invalid_params:\n\traise ParameterConfigError(missing_params = missing_params, invalid_params = invalid_params)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230189":{"id":1230189,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-800,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1230234],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230190":{"id":1230190,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":480,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230228],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230191":{"id":1230191,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":160,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230227],"outputSuccessConnectorIDs":[1230230],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Unique Tables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# force log_metrics variable to upper for comparisons later on \ncleaned_log_metrics = log_metrics.upper() \ncontext.updateVariable('log_metrics',cleaned_log_metrics)\nprint(\"Updated variable `log_metrics`: %s\" % log_metrics)\n\ntable_names = set([ x[0] for x in context.getGridVariable('sourceList')])\n\ny = [ [x] for x in table_names ]\n\ncontext.updateGridVariable('tableNames', y)\nprint(\"Updated GridVariable `tableNames` with: %s\" % y)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1230226":{"id":1230226,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[1230224],"outputSuccessConnectorIDs":[1230225],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Setup Limit Statement"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# supported limit type are 'rownum', 'top', 'limit'\n# This script generates an unformatted SQL Statement to retrieve a single row from the source\n# it will need to be formatted later on in the job to fill in the columns and the source \n# e.g. limitedSQLStatement.format(column_list, source_table_name)\nif limit_type == 'rownum':\n  sql =\\\n  \"\"\"\n  SELECT {} FROM {} WHERE ROWNUM <= 1 \n  \"\"\"\n  \nelif 'top' in limit_type:\n  sql =\\\n  \"\"\"\n  SELECT TOP 1 {} FROM {}\n  \"\"\"\n  \nelif 'limit' in limit_type or limit_type == 'fetch-first-n':\n  sql=\\\n  \"\"\"\n  SELECT {} FROM {} LIMIT 1\n  \"\"\"\n  \nelse:\n  raise Exception(\"No config has been set up for limit_type {}\".format(limit_type))\n  \n  \ncontext.updateVariable('limitedSQLStatement', sql)\nprint(\"Updated variable `limitedSQLStatement`: {}\".format(limitedSQLStatement))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"1230224":{"id":1230224,"sourceID":1230188,"targetID":1230226},"1230225":{"id":1230225,"sourceID":1230226,"targetID":1230185},"1230227":{"id":1230227,"sourceID":1230185,"targetID":1230191},"1230228":{"id":1230228,"sourceID":1230184,"targetID":1230190},"1230230":{"id":1230230,"sourceID":1230191,"targetID":1230184},"1230231":{"id":1230231,"sourceID":1230181,"targetID":1230188}},"failureConnectors":{"1230232":{"id":1230232,"sourceID":1230184,"targetID":1230187}},"unconditionalConnectors":{"1230229":{"id":1230229,"sourceID":1230184,"targetID":1230180},"1230234":{"id":1230234,"sourceID":1230189,"targetID":1230183},"1230235":{"id":1230235,"sourceID":1230183,"targetID":1230181}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"1230233":{"id":1230233,"sourceID":1230184,"targetID":1230186}},"noteConnectors":{},"notes":{"1230176":{"id":1230176,"x":-1431,"y":486,"width":225,"height":64,"text":"**IGNORE**","colour":"d60000"},"1230177":{"id":1230177,"x":808,"y":-553,"width":225,"height":64,"text":"**IGNORE**","colour":"d60000"},"1230182":{"id":1230182,"x":-873,"y":-393,"width":1427,"height":550,"text":"** Data Loader Setup **\nThis orchestration job sets up the different sources which will be extracted and loaded into the target cloud datawarehouse. \n\n\n+ __SQL Config__ Updates the SQL Config Grid Variable for the particular Database Type\n\n+ __Validate Config__ job will ensure that the parameter value pairs in __sqlFlavourConfig__ grid variable are valid. These parameters are used to 'describe' behaviour of the data source, currently, there are 3 options which must be supplied:\n\n* __enclosing_character_start__ **and** __enclosing_character_end__ are the characters to be used to escape database objects (e.g. for Microsoft SQL Server, this would be [ and ])\n* __limit_type__ is the type of limiting statement that is supported by the driver and should be the same as the __limit__ key in the __jdbc-providers.properties__ file. \nIf you do not know what to supply here, use one of these options: \nlimit, where the SQL Query would look like SELECT x FROM y LIMIT N;\ntop, where the SQL Query would look like SELECT TOP N x FROM y;\n\n+ __Setup Limit Statement__ - builds an unformatted SQL Statement to retrieve a single row from the source - this is used in later jobs to get metadata\n\n+ __Environment Defaults__ - where the user has selected [Environment Default], replace this with the actual value for the [Environment Default]\n\n+ __Unique Tables__ - creates a Grid Variable containing the names of the tables requested by the user in the source. This grid variable is iterated over","colour":"f9c21b"}},"variables":{"blob_container":{"definition":{"name":"blob_container","type":"TEXT","scope":"BRANCH","description":"(Azure Only) Azure Blob Container to allow Matillion ETL to use the blob storage container object on Snowflake for staging data. ","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"cloud_storage_area":{"definition":{"name":"cloud_storage_area","type":"TEXT","scope":"BRANCH","description":"The URL and path of the target Google Storage bucket to be used for staging the queried data throughout the job.","visibility":"PRIVATE"},"value":"[Environment Defaiult]"},"connection_url":{"definition":{"name":"connection_url","type":"TEXT","scope":"BRANCH","description":"This is the string used to define the connection URL for the source database. This will be passed in from the calling routine.","visibility":"PUBLIC"},"value":""},"database_type":{"definition":{"name":"database_type","type":"TEXT","scope":"TASKBATCH","description":"The type of the JDBC database to connect to.\n<br>\n<b>Microsoft SQL Server:</b> see <a target=\"_blank\" href=\"http://www.microsoft.com/\">their website</a> for more details.\n<br>\n<b>Oracle:</b> see <a target=\"_blank\" href=\"http://www.oracle.com/index.html\">their website</a> for more details.\n<br>\n<b>PostgreSQL:</b> see <a target=\"_blank\" href=\"http://www.postgresql.org/\">their website</a> for more details.\n<br>\n<b>MySQL:</b> see <a target=\"_blank\" href=\"https://www.mysql.com/\">their website</a> for more details.\n<br>\n<b>IBM DB2:</b> see <a target=\"_blank\" href=\"http://www-01.ibm.com/software/data/db2/\">their website</a> for more details.\n<br>\n<b>Note:</b> For some databases, you must first provide a JDBC driver as \nnot all drivers can be distributed with Matillion ETL. See\n<a target=\"_blank\" href=\"https://redshiftsupport.matillion.com/customer/portal/articles/2406136\">this article</a> \nfor instructions on managing drivers.   ","visibility":"PUBLIC"},"value":"PostgreSQL"},"dist_style":{"definition":{"name":"dist_style","type":"TEXT","scope":"BRANCH","description":"<b>Even:</b> Distributes rows around the Redshift cluster evenly.<br>\n<b>All:</b> Copy rows to all nodes in the Redshift cluster.<br>\nTable distribution is critical to good performance. See the <a href=\"http://docs.aws.amazon.com/redshift/latest/dg/tutorial-tuning-tables-distribution.html\" target=\"_blank\">Amazon Redshift</a> documentation for more information.","visibility":"PRIVATE"},"value":null},"enclosing_character_end":{"definition":{"name":"enclosing_character_end","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"\""},"enclosing_character_start":{"definition":{"name":"enclosing_character_start","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"\""},"encryption_method":{"definition":{"name":"encryption_method","type":"TEXT","scope":"BRANCH","description":"<span class=\"env sf\">(AWS Only) </span>Decide on how the files are encrypted inside the S3 Bucket.<span class=\"env sf\">This property is available when using an Existing Amazon S3 Location for Staging.</span><br>\n                <b>None:</b> No encryption.<br>\n                <b>SSE KMS:</b> Encrypt the data according to a key stored on <a href=\"https://aws.amazon.com/kms/\" target=\"_blank\">KMS</a>.<br>\n                <b>SSE S3:</b> Encrypt the data according to a key stored on an <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\" target=\"_blank\">S3 bucket</a>","visibility":"PUBLIC"},"value":"None"},"fix_target_data_types":{"definition":{"name":"fix_target_data_types","type":"TEXT","scope":"TASKBATCH","description":"For incremental loads, if the job detects metadata changes between the source and target tables, should the job automatically update the target table metadata.  Options are Yes or No.","visibility":"PUBLIC"},"value":"Yes"},"kms_key_id":{"definition":{"name":"kms_key_id","type":"TEXT","scope":"BRANCH","description":"The ID of the KMS encryption key you have chosen to use in the 'Encryption' property.","visibility":"PUBLIC"},"value":""},"limit_type":{"definition":{"name":"limit_type","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"limit"},"limitedSQLStatement":{"definition":{"name":"limitedSQLStatement","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""},"load_concurrent":{"definition":{"name":"load_concurrent","type":"TEXT","scope":"BRANCH","description":"Sequential - Iterations are done in sequence, waiting for each to complete before starting the next. \nThis is the default.\n<br>\nConcurrent - Iterations are run concurrently. This requires all \"Variables to Iterate\" to be defined as\n<a href=\"https://redshiftsupport.matillion.com/customer/portal/articles/2037630?b_id=8915#header1\" target=\"_blank\"><i>Copied</i> variables</a>, so that each iteration gets its own copy of the variable isolated from the same\nvariable being used by other concurrent executions.\n<span class=\"env rs sf\"><br><b>Note:</b> The maximum concurrency is limited by the number of available threads (2x the number of virtual cpus on your cloud instance).</span>","visibility":"PUBLIC"},"value":"Sequential"},"log_metrics":{"definition":{"name":"log_metrics","type":"TEXT","scope":"TASKBATCH","description":"TRUE or FALSE (default=TRUE).\nWhether or not to add useful information to the metrics store.\n","visibility":"PUBLIC"},"value":"TRUE"},"password_manager_entry":{"definition":{"name":"password_manager_entry","type":"TEXT","scope":"BRANCH","description":"The name in the Matillion Password Manager for the password relating to the authentication method.","visibility":"PUBLIC"},"value":null},"pipeline_duration":{"definition":{"name":"pipeline_duration","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":"0"},"pipeline_status":{"definition":{"name":"pipeline_status","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""},"s3_bucket_name":{"definition":{"name":"s3_bucket_name","type":"TEXT","scope":"BRANCH","description":"<span class=\"env sf\">(AWS Only) </span>The name of an S3 bucket for temporary storage. Ensure your access credentials have S3 access and permission to write to the bucket. See <a href=\"https://redshiftsupport.matillion.com/customer/portal/articles/2054760\" target=\"_blank\">this document</a> for details on setting up access. The temporary objects created in this bucket will be removed again after the load completes, they are not kept.<br>\n<span class=\"env sf\">This property is available when using an Existing Amazon S3 Location for Staging.</span>","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"source_schema":{"definition":{"name":"source_schema","type":"TEXT","scope":"BRANCH","description":"The name of the schema in the source database where the tables are located.\nThis may not be required for some databases.","visibility":"PUBLIC"},"value":""},"stage_database":{"definition":{"name":"stage_database","type":"TEXT","scope":"BRANCH","description":"The database name where the staging data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"stage_dataset":{"definition":{"name":"stage_dataset","type":"TEXT","scope":"BRANCH","description":"The dataset name where the staging data will be stored.","visibility":"PRIVATE"},"value":"[Environment Defaiult]"},"stage_prefix":{"definition":{"name":"stage_prefix","type":"TEXT","scope":"BRANCH","description":"A prefix value that will be added to the start of the stage table names.\n\ne.g. If a Stage Prefix of 'stage_' is specified and the table being processed is named 'test_data' then the target table will be named 'stage_test_data'.","visibility":"PUBLIC"},"value":"stage_"},"stage_project":{"definition":{"name":"stage_project","type":"TEXT","scope":"BRANCH","description":"The project name where the staging data will be stored.","visibility":"PRIVATE"},"value":"[Environment Defaiult]"},"stage_schema":{"definition":{"name":"stage_schema","type":"TEXT","scope":"BRANCH","description":"The schema name where the staging data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"stage_warehouse":{"definition":{"name":"stage_warehouse","type":"TEXT","scope":"BRANCH","description":"The warehouse name where the staging data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"staging_type":{"definition":{"name":"staging_type","type":"TEXT","scope":"BRANCH","description":"<b>Snowflake Managed:</b> Allow Matillion ETL to create and use a temporary internal stage on Snowflake for staging the data. This stage, along with the staged data, will cease to exist after loading is complete.<br>\n                <b>Existing Amazon S3 Location:</b> Selecting this will avail the user of properties to specify a custom staging area on S3.\n                <b>Existing Azure Blob Storage Location:</b> Selecting this will avail the user of properties to specify a custom staging area on Azure.","visibility":"PUBLIC"},"value":"Snowflake Managed"},"storage_account":{"definition":{"name":"storage_account","type":"TEXT","scope":"BRANCH","description":"(Azure Only) Azure Storage Account to allow Matillion ETL to specify a blob container object on Snowflake for staging data. ","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"table_name":{"definition":{"name":"table_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":null},"target_database":{"definition":{"name":"target_database","type":"TEXT","scope":"BRANCH","description":"The database name where the target data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"target_dataset":{"definition":{"name":"target_dataset","type":"TEXT","scope":"BRANCH","description":"The dataset name where the target data will be stored.","visibility":"PRIVATE"},"value":"[Environment Defaiult]"},"target_platform":{"definition":{"name":"target_platform","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":"Snowflake"},"target_prefix":{"definition":{"name":"target_prefix","type":"TEXT","scope":"BRANCH","description":"A prefix value that will be added to the start of the target table names.\n\ne.g. If a Target Prefix of 'target_' is specified and the table being processed is named 'test_data' then the target table will be named 'target_test_data'.","visibility":"PUBLIC"},"value":"target_"},"target_project":{"definition":{"name":"target_project","type":"TEXT","scope":"BRANCH","description":"The project name where the target data will be stored.","visibility":"PRIVATE"},"value":"[Environment Defaiult]"},"target_schema":{"definition":{"name":"target_schema","type":"TEXT","scope":"BRANCH","description":"The schema name where the target data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"target_warehouse":{"definition":{"name":"target_warehouse","type":"TEXT","scope":"BRANCH","description":"The warehouse name where the target data will be stored.","visibility":"PUBLIC"},"value":"[Environment Defaiult]"},"username":{"definition":{"name":"username","type":"TEXT","scope":"TASKBATCH","description":"The username to be supplied to connect to the source.\n\nNote: This applies to the Generic JDBC routine. Different authentication options may be required for the other routines.","visibility":"PUBLIC"},"value":""}},"grids":{"connectionOptions":{"definition":{"name":"connectionOptions","scope":"BRANCH","definitions":[{"name":"parameter","type":"TEXT"},{"name":"value","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]},"sourceList":{"definition":{"name":"sourceList","scope":"BRANCH","definitions":[{"name":"tableName","type":"TEXT"},{"name":"columnName","type":"TEXT"},{"name":"incrementalColumn","type":"DECIMAL"},{"name":"keyColumn","type":"DECIMAL"}],"description":"","visibility":"PUBLIC"},"values":[{"values":["dummy","column_one","1","1"]}]},"sqlFlavourConfig":{"definition":{"name":"sqlFlavourConfig","scope":"BRANCH","definitions":[{"name":"parameter","type":"TEXT"},{"name":"value","type":"TEXT"}],"description":"Configuration of the Database Type specified in the job, required parameters and values are:\n+ enclosing_character_start - the start character to be used to identify Database Objects (column/tables) (e.g. \"[\" for Microsoft SQL Server)\n+ enclosing_character_end - the end character to be used to identify Database Objects (column/tables) (e.g. \"]\" for Microsoft SQL Server)\n+ limit_type  - the type of query to be used for limiting results - this can be taken directly from the 'limit' key in the jdbc-providers.properties file. If you do not know what to select here use one of the following:\n* limit - query of format SELECT x FROM y LIMIT n \n* top - query of format SELECT TOP n x FROM y \n","visibility":"PRIVATE"},"values":[]},"tableNames":{"definition":{"name":"tableNames","scope":"BRANCH","definitions":[{"name":"tableName","type":"TEXT"}],"description":"","visibility":"PRIVATE"},"values":[]}}},"info":{"name":"JDBC Incremental Load - 1 - Orchestrator","description":"Unpacked from Shared Job [JDBC Incremental Load].","type":"ORCHESTRATION","tag":"50b54510-6d41-4931-911a-f3346a99b813"}}