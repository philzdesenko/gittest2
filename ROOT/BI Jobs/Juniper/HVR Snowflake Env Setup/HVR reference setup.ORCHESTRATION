{"job":{"components":{"79370":{"id":79370,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-784,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[79395],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79372":{"id":79372,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":736,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79388],"outputSuccessConnectorIDs":[79386],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Install TAKEOFF Stored Procedure dependent on view"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"USE SCHEMA \"TAKEOFF\";\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.TAKEOFF\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA TAKEOFF;\n//\t\t\tcall SPROC_INSTALL_BASE_PRE_SFDC();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_PRE_SFDC\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar pre_sfdc_table_population_statement = `\nCREATE OR REPLACE TRANSIENT TABLE  \"EDP_DB_TST\".\"TAKEOFF\".\"INSTALL_BASE_PRE_SFDC\" AS \n--------------------Change History------------------------------------\n-- Object Name: \"EDP_DB_TST\".\"TAKEOFF\".\"INSTALL_BASE_PRE_SFDC\"\n----------------------------------------------------------------------\n-- ID/NAME  |   DATE    |   Change Description   \n----------------------------------------------------------------------\n-- Sarath Ramavarma    |   29-07-2020  |   Initial Version\n----------------------------------------------------------------------\n\nSELECT DISTINCT\nCEC_Equipment_ID__c,\nProduct2id,\nAccountid,\nCEC_ProductCode__c,\nName,\nSerialNumber,\nParentid,\nStatus,\nQuantity,\nDescription,\nCEC_Sales_Order_number__c,\nCEC_Sales_Order_Line_Number__c,\nCEC_Software_Support_Reference_Number__c,\nCEC_Ship_Date__c,\nCEC_RMANumber__c,\nCEC_Software_version__c,\nCEC_Software_Rev_Last_Contact__c,\nCEC_IP_Address__C,\nCEC_HA_SKU_Serial_Number__c,\nCEC_Feature_Type__c,\nCEC_Under_premium_bundle__c,\nCEC_Feature_Start_date__c,\nCEC_Feature_end_date__c,\nCEC_Maintained_ship_Date__c,\nCEC_Product_Registration_Date__c,\nCEC_Maintained_Install_Date__c,\nCEC_Service_Decline__c,\nCEC_Service_Decline_Reason__c,\nCEC_Service_Decline_Date__c,\nCEC_Common_HW_Personality__c,\nCEC_Bill_To_Partner_Id__c,\nCEC_Ship_To_Partner_Id__c,\nCEC_Installed_At_Partner_Id__c,\nCEC_Primary_Reseller_Id__c,\n--CEC_Registered_By_Partner_Id__c,\nCEC_Sold_To_Partner_Id__c,\nCEC_Managed_Services_Provider_Partner_Id__c,\nCEC_System_Integrator_Partner_Id__c,\nCEC_Managing_Reseller_Partner_Id__c,\nCEC_JN_POS_Distributor_partner_Id__c,\nCEC_JN_POS_Reseller_Partner_Id__c,\nCEC_POS_End_User_PartnerID__c,\nCEC_Distributor_PartnerID__c,\nCEC_MAC_Address__c,\nCEC_CLAIM_CODE__c,\nMAX_EDP_LAST_UPDATED,\nPRODUCT_LKP.SFDC_ID AS PRODUCT_SFDC_ID,\nACCOUNT_LKP.SFDC_ID AS ACCOUNT_SFDC_ID,\nJOB_ID\n\nFROM\n(\nSELECT DISTINCT\nEQUIPMENT_ID AS CEC_Equipment_ID__c,\nMATERIAL_ID AS Product2id,\nACCOUNT AS Accountid,\nPRODUCT_CODE AS CEC_ProductCode__c,\nNAME AS Name,\nSERIAL_NO AS SerialNumber,\nPARENT AS Parentid,\nUSER_STATUS AS Status,\nQUANTITY AS Quantity,\nDESCRIPTION AS Description,\nSALES_ORDER_NO AS CEC_Sales_Order_number__c,\nSALES_ORDER_LINE_NO AS CEC_Sales_Order_Line_Number__c,\nSOFTWARE_SUPPORT_REFERENCE_NO AS CEC_Software_Support_Reference_Number__c,\nSHIP_DATE AS CEC_Ship_Date__c,\nRMA_NO AS CEC_RMANumber__c,\nSOFTWARE_VERSION AS CEC_Software_version__c,\nSOFTWARE_REV_LAST_CONTACT AS CEC_Software_Rev_Last_Contact__c,\nIP_ADDRESS AS CEC_IP_Address__C,\nHA_SKU_SERIAL_NO AS CEC_HA_SKU_Serial_Number__c,\nFEATURE_TYPE AS CEC_Feature_Type__c,\nUNDER_PREMIUM_BUNDLE AS CEC_Under_premium_bundle__c,\nFEATURE_START_DATE AS CEC_Feature_Start_date__c,\nFEATURE_END_DATE AS CEC_Feature_end_date__c,\nMAINTAINED_SHIP_DATE AS CEC_Maintained_ship_Date__c,\nPRODUCT_REGISTRATION_DATE AS CEC_Product_Registration_Date__c,\nMAINTAINED_INSTALL_DATE AS CEC_Maintained_Install_Date__c,\nSERVICE_DECLINE AS CEC_Service_Decline__c,\nSERVICE_DECLINE_REASON AS CEC_Service_Decline_Reason__c,\nSERVICE_DECLINE_DATE AS CEC_Service_Decline_Date__c,\nCOMMON_HW_PERSONALITY AS CEC_Common_HW_Personality__c,\nBILL_TO_PARTNER_ID AS CEC_Bill_To_Partner_Id__c,\nSHIP_TO_PARTNER_ID AS CEC_Ship_To_Partner_Id__c,\nINSTALLED_AT_PARTNER_ID AS CEC_Installed_At_Partner_Id__c,\nPRIMARY_RESELLER_ID AS CEC_Primary_Reseller_Id__c,\n--REGISTERED_BY_PARTNER_ID AS CEC_Registered_By_Partner_Id__c,\n-- AS CEC_Registered_By_Partner_Id__c\nSOLD_TO_PARTNER_ID AS CEC_Sold_To_Partner_Id__c,\nMANAGED_SERVICES_PROVIDER_PARTNER_ID AS CEC_Managed_Services_Provider_Partner_Id__c,\nSYSTEM_INTEGRATOR_PARTNER_ID AS CEC_System_Integrator_Partner_Id__c,\nMANAGING_RESELLER_PARTNER_ID AS CEC_Managing_Reseller_Partner_Id__c,\nJN_POS_DISTRRIBUTOR_PARTNER_ID AS CEC_JN_POS_Distributor_partner_Id__c,\nJN_POS_RESELLER_PARTNER_ID AS CEC_JN_POS_Reseller_Partner_Id__c,\nPOS_END_USER_PARTNER_ID AS CEC_POS_End_User_PartnerID__c,\nDISTRIBUTOR_PARTNER_ID AS CEC_Distributor_PartnerID__c,\nMAC_ADDRESS AS CEC_MAC_Address__c,\nCLAIM_CODE AS CEC_CLAIM_CODE__c,\nMAX_EDP_LAST_UPDATED,\n(SELECT txn_id.nextval) AS JOB_ID\nFROM\n\"EDP_DB_TST\".\"TAKEOFF\".\"INSTALL_BASE_MASTER_V\" \nWHERE \n(--MANDATORY FIELDS VALIDATION\n  CEC_Equipment_ID__c IS NOT NULL AND TRIM(CEC_Equipment_ID__c)!=''''\n\t\tAND Product2Id IS NOT NULL AND TRIM(Product2Id)!=''''\n\t\tAND AccountId IS NOT NULL AND TRIM(AccountId)!=''''\n\t\tAND Name IS NOT NULL AND TRIM(Name)!=''''\n        --AND PARENTID IS NOT NULL AND PARENTID!=''''\n)\n\nAND\nMAX_EDP_LAST_UPDATED > ( SELECT max(MAX_LAST_LOAD_TS) FROM \"EDP_DB_TST\".\"LANDING\".\"METADATA_LOOKUP\" WHERE OBJECT_NAME=''ASSET'' and EDP_OPERATION=''OUTBOUND_FROM_SNOWFLAKE'')\n)MASTER_V\n\nLEFT JOIN\n\"EDP_DB_TST\".\"LANDING\".\"ACCOUNT_XREF\" ACCOUNT_LKP ON MASTER_V.AccountId=ACCOUNT_LKP.EXTERNAL_ID\n\nLEFT JOIN\n\"EDP_DB_TST\".\"LANDING\".\"PRODUCT_XREF\" PRODUCT_LKP ON MASTER_V.Product2Id=PRODUCT_LKP.EXTERNAL_ID\n\nQUALIFY  ROW_NUMBER() OVER (PARTITION BY CEC_EQUIPMENT_ID__C ORDER BY CEC_EQUIPMENT_ID__C)=1\n\n;\n\n\t\t\t\t\t\t\t`\n\n///////////////////// end of pre_sfdc_table_population_statement //////////////////////////\t\n\n\nvar statement_pre_sfdc_table_population = snowflake.createStatement( {sqlText: pre_sfdc_table_population_statement} );\n\nstatement_pre_sfdc_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_PRE_SFDC Execution is successful'';\n\n'\n;\n\nUSE SCHEMA \"LANDING\";\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n//  This is for insert statement into Delta_log_mat table\n// Stored Procedure Database and Schema: EDP_DB_STG.CEC_DM_STAGING\n// Calling: \n//\t\t\tUSE EDP_DB_TST;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_DELTA_LOG_MAT_INSERT();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_DELTA_LOG_INSERT\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar delta_log_insert_stmnt = `\n\tINSERT INTO \"EDP_DB_TST\".\"LANDING\".\"INSTALL_BASE_DELTA_LOG\"\n\tSELECT * FROM  \"EDP_DB_TST\".\"TAKEOFF\".\"INSTALL_BASE_PRE_SFDC\";\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of delta_log_insert_stmnt //////////////////////////\t\n\n\nvar stmnt_delta_log_insert = snowflake.createStatement( {sqlText: delta_log_insert_stmnt} );\n\nstmnt_delta_log_insert.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_DELTA_LOG_INSERT Execution is successful'';\n\n'\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79373":{"id":79373,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":237373210,"x":-400,"y":-192,"width":32,"height":32,"inputConnectorIDs":[79389],"outputSuccessConnectorIDs":[79384],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Truncate INSTALL_BASE_DELTA_LOG"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"4":{"slot":4,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"INSTALL_BASE_DELTA_LOG"}}}},"visible":true},"6":{"slot":6,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79374":{"id":79374,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":1008,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79386],"outputSuccessConnectorIDs":[79382],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PROC_INSTALL_BASE_PRE_SFDC()"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"USE SCHEMA \"TAKEOFF\";\n\nCALL SPROC_INSTALL_BASE_PRE_SFDC();\n\nUSE SCHEMA \"LANDING\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79375":{"id":79375,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":1584,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79387],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79376":{"id":79376,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":128,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79391],"outputSuccessConnectorIDs":[79385],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Populate transient tables"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Populate transient tables"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79377":{"id":79377,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":1296,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79382],"outputSuccessConnectorIDs":[79387],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SPROC_INSTALL_BASE_DELTA_LOG_INSERT()"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CALL SPROC_INSTALL_BASE_DELTA_LOG_INSERT();"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79378":{"id":79378,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-654,"y":-127,"width":32,"height":32,"inputConnectorIDs":[79395],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[79390],"outputFalseConnectorIDs":[79393],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Full reset?"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ev_reset"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"Y"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79379":{"id":79379,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-560,"y":-192,"width":32,"height":32,"inputConnectorIDs":[79390],"outputSuccessConnectorIDs":[79389],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Initialise Meta Data"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Initialise Meta Data"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79380":{"id":79380,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":432,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79385],"outputSuccessConnectorIDs":[79388],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create view INSTALL_BASE_MASTER_V"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"USE SCHEMA \"TAKEOFF\";\n\nCREATE OR REPLACE VIEW \"INSTALL_BASE_MASTER_V\" AS \n--------------------Change History------------------------------------\n-- Object Name: \"EDP_DB_TST\".\"TAKEOFF\".\"INSTALL_BASE_MASTER_V\"\n----------------------------------------------------------------------\n-- ID/NAME  |   DATE    |   Change Description   \n----------------------------------------------------------------------\n-- Sarath Ramavarma    |   08-29-2020  |   Initial Version\n----------------------------------------------------------------------\n\nSELECT \nEQUIPMENT_ID,\nMATERIAL_ID,\nACCOUNT,\nPRODUCT_CODE, \nNAME, \nSERIAL_NO,\nPARENT, \nUSER_STATUS, \nQUANTITY,\nDESCRIPTION,  \t\t\nSALES_ORDER_NO,\nSALES_ORDER_LINE_NO,\nSOFTWARE_SUPPORT_REFERENCE_NO,\nSHIP_DATE,\nRMA_NO,\nSOFTWARE_VERSION,\nSOFTWARE_REV_LAST_CONTACT,\nIP_ADDRESS,\nHA_SKU_SERIAL_NO,\nFEATURE_TYPE,\nUNDER_PREMIUM_BUNDLE,\nFEATURE_START_DATE,\nFEATURE_END_DATE,\nMAINTAINED_SHIP_DATE,\nPRODUCT_REGISTRATION_DATE,\t\nMAINTAINED_INSTALL_DATE,\nSERVICE_DECLINE,\nSERVICE_DECLINE_REASON,\nSERVICE_DECLINE_DATE,\nCOMMON_HW_PERSONALITY,\nBILL_TO_PARTNER_ID,\nSHIP_TO_PARTNER_ID,\nINSTALLED_AT_PARTNER_ID,\nPRIMARY_RESELLER_ID,\nREGISTERED_BY_PARTNER_ID,\nSOLD_TO_PARTNER_ID,\nMANAGED_SERVICES_PROVIDER_PARTNER_ID,\nSYSTEM_INTEGRATOR_PARTNER_ID,\nMANAGING_RESELLER_PARTNER_ID,\nJN_POS_DISTRRIBUTOR_PARTNER_ID,\nJN_POS_RESELLER_PARTNER_ID,\nPOS_END_USER_PARTNER_ID,\nDISTRIBUTOR_PARTNER_ID,\nMAC_ADDRESS,\nCLAIM_CODE,\nMAX_EDP_LAST_UPDATED\nFROM\n(\nSELECT  \nEQUIPMENT_ID,\n\n(CASE\tWHEN MATERIAL_ID IS NULL OR TRIM(MATERIAL_ID)='' THEN\t''\nELSE\tMATERIAL_ID\nEND) AS MATERIAL_ID,\n--Restricting to Sample Accounts\n(case when (   INSTALLED_AT_PARTNER_ID is NULL OR trim (INSTALLED_AT_PARTNER_ID)=''\n           )   Then END_USER_PARTNER_ID\n     else INSTALLED_AT_PARTNER_ID \n END) AS ACCOUNT,\nPRODUCT_CODE, \n--NAME\n(CASE WHEN SERIAL_NO IS NULL OR TRIM(SERIAL_NO)='' \n    THEN PRODUCT_CODE\n    ELSE  SERIAL_NO||'_'||PRODUCT_CODE \nEND) AS NAME, \nSERIAL_NO,\n--PARENT\n(CASE\tWHEN\tTRIM(PARENT_EQUIP_ID) IS NULL OR TRIM(PARENT_EQUIP_ID)='' THEN\tNULL\nELSE\tPARENT_EQUIP_ID\nEND) AS PARENT, \n  \nUSER_STATUS,\nQUANTITY,\nDESCRIPTION,\nSALES_ORDER_NO,\nSALES_ORDER_LINE_NO,\nSOFTWARE_SUPPORT_REFERENCE_NO,\n\n--SHIP_DATE,\n(CASE \n        WHEN\t\n        SHIP_DATE IS NULL \n        OR SHIP_DATE='00000000' \n        OR (LENGTH(SHIP_DATE)<'08'OR LENGTH(SHIP_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(SHIP_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(SHIP_DATE,5, 2) >'12' OR SUBSTR(SHIP_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(SHIP_DATE,7, 2) >'31' OR SUBSTR(SHIP_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(SHIP_DATE,5, 2)='02' AND SUBSTR(SHIP_DATE,7, 2) >'29' AND SUBSTR(SHIP_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(SHIP_DATE,5, 2)='02' AND SUBSTR(SHIP_DATE,7, 2) >'28' AND SUBSTR(SHIP_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(SHIP_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(SHIP_DATE,5, 2)|| '-'|| SUBSTR(SHIP_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS SHIP_DATE, \n\nRMA_NO,\nMAINTAINED_SOFTWARE_VERSION AS SOFTWARE_VERSION,\n( CASE WHEN TRIM(SOFTWARE_REV_LAST_CONTACT)='' THEN NULL ELSE SOFTWARE_REV_LAST_CONTACT END) AS SOFTWARE_REV_LAST_CONTACT,\nMAINTAINED_IP_ADDRESS AS IP_ADDRESS,\nHA_SKU_SERIAL_NO,\nFEATURE_TYPE,\n\n--UNDER_PREMIUM_BUNDLE,\n(CASE WHEN UNDER_PREMIUM_BUNDLE ='Y' THEN 'TRUE'\n  ELSE   'FALSE' END ) AS  UNDER_PREMIUM_BUNDLE,\n--FEATURE_START_DATE\n(CASE \n        WHEN\t\n        FEATURE_START_DATE IS NULL \n        OR FEATURE_START_DATE='00000000' \n        OR (LENGTH(FEATURE_START_DATE)<'08'OR LENGTH(FEATURE_START_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(FEATURE_START_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(FEATURE_START_DATE,5, 2) >'12' OR SUBSTR(FEATURE_START_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(FEATURE_START_DATE,7, 2) >'31' OR SUBSTR(FEATURE_START_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(FEATURE_START_DATE,5, 2)='02' AND SUBSTR(FEATURE_START_DATE,7, 2) >'29' AND SUBSTR(FEATURE_START_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(FEATURE_START_DATE,5, 2)='02' AND SUBSTR(FEATURE_START_DATE,7, 2) >'28' AND SUBSTR(FEATURE_START_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(FEATURE_START_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(FEATURE_START_DATE,5, 2)|| '-'|| SUBSTR(FEATURE_START_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS FEATURE_START_DATE, \n\t\t\n--FEATURE_END_DATE\n (CASE \n        WHEN\t\n        FEATURE_END_DATE IS NULL \n        OR FEATURE_END_DATE='00000000' \n        OR (LENGTH(FEATURE_END_DATE)<'08'OR LENGTH(FEATURE_END_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(FEATURE_END_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(FEATURE_END_DATE,5, 2) >'12' OR SUBSTR(FEATURE_END_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(FEATURE_END_DATE,7, 2) >'31' OR SUBSTR(FEATURE_END_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(FEATURE_END_DATE,5, 2)='02' AND SUBSTR(FEATURE_END_DATE,7, 2) >'29' AND SUBSTR(FEATURE_END_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(FEATURE_END_DATE,5, 2)='02' AND SUBSTR(FEATURE_END_DATE,7, 2) >'28' AND SUBSTR(FEATURE_END_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(FEATURE_END_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(FEATURE_END_DATE,5, 2)|| '-'|| SUBSTR(FEATURE_END_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS FEATURE_END_DATE,\n\t\t\n\t\t\n--MAINTAINED_SHIP_DATE  \n (CASE \n        WHEN\t\n        MAINTAINED_SHIP_DATE IS NULL \n        OR MAINTAINED_SHIP_DATE='00000000' \n        OR (LENGTH(MAINTAINED_SHIP_DATE)<'08'OR LENGTH(MAINTAINED_SHIP_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(MAINTAINED_SHIP_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(MAINTAINED_SHIP_DATE,5, 2) >'12' OR SUBSTR(MAINTAINED_SHIP_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(MAINTAINED_SHIP_DATE,7, 2) >'31' OR SUBSTR(MAINTAINED_SHIP_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(MAINTAINED_SHIP_DATE,5, 2)='02' AND SUBSTR(MAINTAINED_SHIP_DATE,7, 2) >'29' AND SUBSTR(MAINTAINED_SHIP_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(MAINTAINED_SHIP_DATE,5, 2)='02' AND SUBSTR(MAINTAINED_SHIP_DATE,7, 2) >'28' AND SUBSTR(MAINTAINED_SHIP_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(MAINTAINED_SHIP_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(MAINTAINED_SHIP_DATE,5, 2)|| '-'|| SUBSTR(MAINTAINED_SHIP_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS MAINTAINED_SHIP_DATE,\n\t\t\n  \n--PRODUCT_REGISTRATION_DATE\n  (CASE \n        WHEN\t\n        PRODUCT_REGISTRATION_DATE IS NULL \n        OR PRODUCT_REGISTRATION_DATE='00000000' \n        OR (LENGTH(PRODUCT_REGISTRATION_DATE)<'08'OR LENGTH(PRODUCT_REGISTRATION_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(PRODUCT_REGISTRATION_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(PRODUCT_REGISTRATION_DATE,5, 2) >'12' OR SUBSTR(PRODUCT_REGISTRATION_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(PRODUCT_REGISTRATION_DATE,7, 2) >'31' OR SUBSTR(PRODUCT_REGISTRATION_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(PRODUCT_REGISTRATION_DATE,5, 2)='02' AND SUBSTR(PRODUCT_REGISTRATION_DATE,7, 2) >'29' AND SUBSTR(PRODUCT_REGISTRATION_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(PRODUCT_REGISTRATION_DATE,5, 2)='02' AND SUBSTR(PRODUCT_REGISTRATION_DATE,7, 2) >'28' AND SUBSTR(PRODUCT_REGISTRATION_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(PRODUCT_REGISTRATION_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(PRODUCT_REGISTRATION_DATE,5, 2)|| '-'|| SUBSTR(PRODUCT_REGISTRATION_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS PRODUCT_REGISTRATION_DATE,\n\t\t\n\t\t\n \n \n--MAINTAINED_INSTALL_DATE\n   (CASE \n        WHEN\t\n        MAINTAINED_INSTALL_DATE IS NULL \n        OR MAINTAINED_INSTALL_DATE='00000000' \n        OR (LENGTH(MAINTAINED_INSTALL_DATE)<'08'OR LENGTH(MAINTAINED_INSTALL_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(MAINTAINED_INSTALL_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(MAINTAINED_INSTALL_DATE,5, 2) >'12' OR SUBSTR(MAINTAINED_INSTALL_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(MAINTAINED_INSTALL_DATE,7, 2) >'31' OR SUBSTR(MAINTAINED_INSTALL_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(MAINTAINED_INSTALL_DATE,5, 2)='02' AND SUBSTR(MAINTAINED_INSTALL_DATE,7, 2) >'29' AND SUBSTR(MAINTAINED_INSTALL_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(MAINTAINED_INSTALL_DATE,5, 2)='02' AND SUBSTR(MAINTAINED_INSTALL_DATE,7, 2) >'28' AND SUBSTR(MAINTAINED_INSTALL_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(MAINTAINED_INSTALL_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(MAINTAINED_INSTALL_DATE,5, 2)|| '-'|| SUBSTR(MAINTAINED_INSTALL_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS MAINTAINED_INSTALL_DATE,\n \n--SERVICE_DECLINE\n(CASE WHEN SERVICE_DECLINE='Y' THEN 'TRUE' ELSE 'FALSE' END)  AS SERVICE_DECLINE,\nSERVICE_DECLINE_REASON,\n\n--SERVICE_DECLINE_DATE\n   (CASE \n        WHEN\t\n        SERVICE_DECLINE_DATE IS NULL \n        OR SERVICE_DECLINE_DATE='00000000' \n        OR (LENGTH(SERVICE_DECLINE_DATE)<'08'OR LENGTH(SERVICE_DECLINE_DATE)>'08')-- TO VALIDATE THE LENGTH OF STRING FOR DATE\n        OR SUBSTR(SERVICE_DECLINE_DATE,1, 4) < '1900' --TO VALIDATE YEAR\n        OR (SUBSTR(SERVICE_DECLINE_DATE,5, 2) >'12' OR SUBSTR(SERVICE_DECLINE_DATE,5, 2) <'01') --TO VALIDATE MONTH\n        OR (SUBSTR(SERVICE_DECLINE_DATE,7, 2) >'31' OR SUBSTR(SERVICE_DECLINE_DATE,7, 2) <'01' ) --TO VALIDATE DAY\n        OR (SUBSTR(SERVICE_DECLINE_DATE,5, 2)='02' AND SUBSTR(SERVICE_DECLINE_DATE,7, 2) >'29' AND SUBSTR(SERVICE_DECLINE_DATE,1, 4)%4=0) --TO VALIDATE LEAP YEAR\n        OR (SUBSTR(SERVICE_DECLINE_DATE,5, 2)='02' AND SUBSTR(SERVICE_DECLINE_DATE,7, 2) >'28' AND SUBSTR(SERVICE_DECLINE_DATE,1, 4)%4!='0')--TO VALIDATE NON LEAP YEAR\nTHEN\t''\n\t\tELSE\t\n(REPLACE(SUBSTR(SERVICE_DECLINE_DATE,1, 4),'9999','3999')||'-' ||SUBSTR(SERVICE_DECLINE_DATE,5, 2)|| '-'|| SUBSTR(SERVICE_DECLINE_DATE,7, 2)) --As max years allowed by SFDC is 5000\n\t   END) \n        AS SERVICE_DECLINE_DATE,\n\nCOMMON_HW_PERSONALITY,\n\n--BILL_TO_PARTNER_ID\n(CASE WHEN TRIM(BILL_TO_PARTNER_ID)='' OR BILL_TO_PARTNER_ID is NULL  THEN ''\nELSE  BILL_TO_PARTNER_ID END ) AS BILL_TO_PARTNER_ID,\n\n--SHIP_TO_PARTNER_ID\n(CASE WHEN SHIP_TO_PARTNER_ID is NULL OR TRIM(SHIP_TO_PARTNER_ID)=''  THEN ''\nELSE  SHIP_TO_PARTNER_ID \n END ) AS SHIP_TO_PARTNER_ID,\n \n \n (CASE WHEN INSTALLED_AT_PARTNER_ID is NULL OR TRIM(INSTALLED_AT_PARTNER_ID)=''  THEN ''\nELSE  INSTALLED_AT_PARTNER_ID \n END ) AS INSTALLED_AT_PARTNER_ID,\n \n (CASE WHEN PRIMARY_RESELLER_ID is NULL OR TRIM(PRIMARY_RESELLER_ID)=''  THEN ''\nELSE  PRIMARY_RESELLER_ID \n END ) AS PRIMARY_RESELLER_ID,\n \n(CASE WHEN REGISTERED_BY_PARTNER_ID is NULL OR TRIM(REGISTERED_BY_PARTNER_ID)=''   THEN ''\nELSE  REGISTERED_BY_PARTNER_ID \n END ) AS REGISTERED_BY_PARTNER_ID,\n \n (CASE WHEN SOLD_TO_PARTNER_ID is NULL OR TRIM(SOLD_TO_PARTNER_ID)=''   THEN ''\nELSE  SOLD_TO_PARTNER_ID \n END ) AS SOLD_TO_PARTNER_ID,\n \n (CASE WHEN MANAGED_SERVICES_PROVIDER_PARTNER_ID is NULL OR TRIM(MANAGED_SERVICES_PROVIDER_PARTNER_ID)=''  THEN ''\nELSE  MANAGED_SERVICES_PROVIDER_PARTNER_ID \n END ) AS MANAGED_SERVICES_PROVIDER_PARTNER_ID,\n \n(CASE WHEN  SYSTEM_INTEGRATOR_PARTNER_ID is NULL  OR TRIM(SYSTEM_INTEGRATOR_PARTNER_ID)='' THEN ''\nELSE   SYSTEM_INTEGRATOR_PARTNER_ID  \n END ) AS  SYSTEM_INTEGRATOR_PARTNER_ID,\n \n(CASE WHEN   MANAGING_RESELLER_PARTNER_ID is NULL  OR TRIM(MANAGING_RESELLER_PARTNER_ID)='' THEN ''\nELSE    MANAGING_RESELLER_PARTNER_ID \n END ) AS   MANAGING_RESELLER_PARTNER_ID,\n \n(CASE WHEN    JN_POS_DISTRRIBUTOR_PARTNER_ID is NULL  OR TRIM(JN_POS_DISTRRIBUTOR_PARTNER_ID)='' THEN ''\nELSE     JN_POS_DISTRRIBUTOR_PARTNER_ID \n END ) AS    JN_POS_DISTRRIBUTOR_PARTNER_ID,\n \n\n (CASE WHEN    JN_POS_RESELLER_PARTNER_ID is NULL  OR TRIM(JN_POS_RESELLER_PARTNER_ID)='' THEN ''\nELSE     JN_POS_RESELLER_PARTNER_ID \n END ) AS    JN_POS_RESELLER_PARTNER_ID,\n \n (CASE WHEN    POS_END_USER_PARTNER_ID is NULL  OR TRIM(POS_END_USER_PARTNER_ID)='' THEN ''\nELSE     POS_END_USER_PARTNER_ID \n END ) AS    POS_END_USER_PARTNER_ID,\n \n (CASE WHEN    DISTRIBUTOR_PARTNER_ID is NULL  OR TRIM(DISTRIBUTOR_PARTNER_ID)='' THEN ''\nELSE     DISTRIBUTOR_PARTNER_ID \n END ) AS    DISTRIBUTOR_PARTNER_ID,\nMAC_ADDRESS,\nCLAIM_CODE,\nMAX_EDP_LAST_UPDATED\nfrom\n(\nSELECT DISTINCT \nMATDRIVER.EQUIPMENT_ID AS EQUIPMENT_ID,\nMATDRIVER.MATERIAL_ID AS MATERIAL_ID,\nMATDRIVER.NAME AS DESCRIPTION,\nMATDRIVER.PRODUCT_CODE AS PRODUCT_CODE, \nMATDRIVER.SERIAL_NO AS SERIAL_NO,\n--MATDRIVER.SERIAL_NO||'_'||MATDRIVER.PRODUCT_CODE AS NAME,\nMATDRIVER.USER_STATUS AS USER_STATUS,\n--MATDRIVER.END_OF_LIFE_DATE , -- REQUIRED FOR DEBUGGING PURPOSE\n--MATDRIVER.END_OF_SERVICE_DATE,-- REQUIRED FOR DEBUGGING PURPOSE\nDTLS.SALES_ORDER_NO AS SALES_ORDER_NO,\nDTLS.SALES_ORDER_LINE_NO AS SALES_ORDER_LINE_NO,\nDTLS.SOFTWARE_SUPPORT_REFERENCE_NO AS SOFTWARE_SUPPORT_REFERENCE_NO,\nDTLS.QUANTITY AS QUANTITY,\nDTLS.SHIP_DATE AS SHIP_DATE,\nDTLS.RMA_NO AS RMA_NO,\nDTLS.MAINTAINED_SOFTWARE_VERSION AS MAINTAINED_SOFTWARE_VERSION,\nDTLS.SOFTWARE_REV_LAST_CONTACT AS SOFTWARE_REV_LAST_CONTACT,\nDTLS.MAINTAINED_IP_ADDRESS AS MAINTAINED_IP_ADDRESS,\nDTLS.HA_SKU_SERIAL_NO AS HA_SKU_SERIAL_NO,\nDTLS.FEATURE_TYPE AS FEATURE_TYPE,\nDTLS.UNDER_PREMIUM_BUNDLE AS UNDER_PREMIUM_BUNDLE,\nDTLS.FEATURE_START_DATE AS FEATURE_START_DATE,\nDTLS.FEATURE_END_DATE AS FEATURE_END_DATE,\nDTLS.MAINTAINED_SHIP_DATE AS MAINTAINED_SHIP_DATE,\nDTLS.PRODUCT_REGISTRATION_DATE AS PRODUCT_REGISTRATION_DATE,\t\nDTLS.MAINTAINED_INSTALL_DATE AS MAINTAINED_INSTALL_DATE,\nDTLS.SERVICE_DECLINE AS SERVICE_DECLINE,\nDTLS.SERVICE_DECLINE_REASON AS SERVICE_DECLINE_REASON,\nDTLS.SERVICE_DECLINE_DATE AS SERVICE_DECLINE_DATE,\nDTLS.COMMON_HW_PERSONALITY AS COMMON_HW_PERSONALITY,\nMAINP.END_USER_PARTNER_ID AS END_USER_PARTNER_ID,\nMAINP.INSTALLED_AT_PARTNER_ID AS INSTALLED_AT_PARTNER_ID,\nDTLS.MAC_ADDRESS,\nDTLS.CLAIM_CODE,\nBILTOPID_RGBPID.BILL_TO_PARTNER_ID,\nBILTOPID_RGBPID.SHIP_TO_PARTNER_ID,\nBILTOPID_RGBPID.PRIMARY_RESELLER_ID,\nBILTOPID_RGBPID.REGISTERED_BY_PARTNER_ID,\nSOTPID_MGRPID.SOLD_TO_PARTNER_ID,\nSOTPID_MGRPID.MANAGED_SERVICES_PROVIDER_PARTNER_ID,\nSOTPID_MGRPID.SYSTEM_INTEGRATOR_PARTNER_ID,\nSOTPID_MGRPID.MANAGING_RESELLER_PARTNER_ID,\nJNPOSD_PNSN.JN_POS_DISTRRIBUTOR_PARTNER_ID,\nJNPOSD_PNSN.JN_POS_RESELLER_PARTNER_ID,\nJNPOSD_PNSN.POS_END_USER_PARTNER_ID,\nJNPOSD_PNSN.DISTRIBUTOR_PARTNER_ID,\n--PARENT_SERIAL_NO,\n--PARENT_PART_NO,\nJNPOSD_PNSN.PARENT_EQUIP_ID,\nGREATEST(\n(CASE WHEN MATDRIVER.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE MATDRIVER.EDP_LAST_UPDATED END),\n(CASE WHEN MAINP.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE MAINP.EDP_LAST_UPDATED END),\n(CASE WHEN DTLS.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE DTLS.EDP_LAST_UPDATED END),\n(CASE WHEN BILTOPID_RGBPID.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE BILTOPID_RGBPID.EDP_LAST_UPDATED END),\n(CASE WHEN SOTPID_MGRPID.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE SOTPID_MGRPID.EDP_LAST_UPDATED END),\n(CASE WHEN JNPOSD_PNSN.EDP_LAST_UPDATED is NULL THEN to_timestamp('1900-01-01') ELSE JNPOSD_PNSN.EDP_LAST_UPDATED END)\n) AS MAX_EDP_LAST_UPDATED\n  \nFROM\n  \"EDP_DB_TST\".\"LANDING\".\"IB_STG_DRIVER\" MATDRIVER\nINNER JOIN \n \"EDP_DB_TST\".\"LANDING\".\"IB_STG_MAIN_PARTNER\" MAINP\n  ON MATDRIVER.EQUIPMENT_ID=MAINP.EQUIPMENT_ID \nINNER JOIN \n  \"EDP_DB_TST\".\"LANDING\".\"IB_STG_Z_DETAILS\" DTLS\n  ON MATDRIVER.EQUIPMENT_ID=DTLS.EQUIPMENT_ID \nINNER JOIN\n\"EDP_DB_TST\".\"LANDING\".\"IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR\" BILTOPID_RGBPID\non MATDRIVER.EQUIPMENT_ID = BILTOPID_RGBPID.EQUIPMENT_ID\nINNER JOIN\n \"EDP_DB_TST\".\"LANDING\".\"IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR\" SOTPID_MGRPID\n on MATDRIVER.EQUIPMENT_ID = SOTPID_MGRPID.EQUIPMENT_ID\n INNER JOIN\n\"EDP_DB_TST\".\"LANDING\".\"IB_STG_JNPOS_POSUSR_DIST_PNSN_PARTNER\" JNPOSD_PNSN\non MATDRIVER.EQUIPMENT_ID = JNPOSD_PNSN.EQUIPMENT_ID\n\nWhere MATDRIVER.EQUIPMENT_ID  not  like ('2%')\n )\n\n);"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79381":{"id":79381,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-128,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79392],"outputSuccessConnectorIDs":[79391],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Install Stored Procedures"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"USE DATABASE \"EDP_DB_TST\" ;\nUSE SCHEMA \"LANDING\"; --CREATED IN LANDING due to insufficient priviliges in CEC_DM\n\n\n/*\nThis is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_DRIVER();\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_DRIVER\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar driver_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_DRIVER\" AS\n\tSELECT DISTINCT * FROM \n\t\"EDP_DB_TST\".\"LANDING\".\"IB_STG_DRIVER_MAT\" \n\t;\n\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of driver_table_population_statement //////////////////////////\t\n\n\nvar statement_driver_table_population = snowflake.createStatement( {sqlText: driver_table_population_statement} );\n\nstatement_driver_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_DRIVER Execution is successful'';\n\n'\n;\n\n\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_MAIN_PARTNER();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_MAIN_PARTNER\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar main_partner_mat_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_MAIN_PARTNER\" AS\n\tSELECT DISTINCT * FROM \n\t\"EDP_DB_TST\".\"LANDING\".\"IB_STG_MAIN_PARTNER_MAT\" \n\t;\n\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of main_partner_mat_table_population_statement //////////////////////////\t\n\n\nvar statement_main_partner_mat_table_population = snowflake.createStatement( {sqlText: main_partner_mat_table_population_statement} );\n\nstatement_main_partner_mat_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_MAIN_PARTNER Execution is successful'';\n\n'\n;\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_IB_STG_Z_DETAILS();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_IB_STG_Z_DETAILS\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar ib_stg_z_details_mat_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_Z_DETAILS\" AS\n\tSELECT DISTINCT * FROM \"EDP_DB_TST\".\"LANDING\".\"IB_STG_Z_DETAILS_MAT\" \n\t;\n\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of ib_stg_z_details_mat_table_population_statement //////////////////////////\t\n\n\nvar statement_ib_stg_z_details_mat_table_population = snowflake.createStatement( {sqlText: ib_stg_z_details_mat_table_population_statement} );\n\nstatement_ib_stg_z_details_mat_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_IB_STG_Z_DETAILS Execution is successful'';\n\n'\n;\n\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar ib_stg_bil_ship_rslr_rgdby_prtnr_mat_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR\" AS\n\tSELECT DISTINCT * FROM   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR_MAT\" \n\t ;\n\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of ib_stg_bil_ship_rslr_rgdby_prtnr_mat_table_population_statement //////////////////////////\t\n\n\nvar statement_ib_stg_bil_ship_rslr_rgdby_prtnr_mat_table_population = snowflake.createStatement( {sqlText: ib_stg_bil_ship_rslr_rgdby_prtnr_mat_table_population_statement} );\n\nstatement_ib_stg_bil_ship_rslr_rgdby_prtnr_mat_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_IB_STG_BIL_SHIP_RSLR_RGDBY_PRTNR Execution is successful'';\n\n'\n;\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar ib_stg_soldto_mngdsrv_prvdr_sysintg_mngrslr_prtnr_mat_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR\" AS\n\tSELECT DISTINCT * FROM \"EDP_DB_TST\".\"LANDING\".\"IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR_MAT\"  \n\t  ;\n\n\t\t\t\t\t\t\t\t\t\t`\n\n///////////////////// end of ib_stg_soldto_mngdsrv_prvdr_sysintg_mngrslr_prtnr_mat_table_population_statement //////////////////////////\t\n\n\nvar statement_ib_stg_soldto_mngdsrv_prvdr_sysintg_mngrslr_prtnr_mat_table_population = snowflake.createStatement( {sqlText: ib_stg_soldto_mngdsrv_prvdr_sysintg_mngrslr_prtnr_mat_table_population_statement} );\n\nstatement_ib_stg_soldto_mngdsrv_prvdr_sysintg_mngrslr_prtnr_mat_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_IB_STG_SOLDTO_MNGDSRV_PRVDR_SYSINTG_MNGRSLR_PRTNR Execution is successful'';\n\n'\n;\n\n/*\n/////////////////////////////////////////////////////////////////////////////////////\n// This is for generating Driver Transient Table for Install Base.\n// Stored Procedure Database and Schema: EDP_DB_TST.LANDING\n// Calling: \n//\t\t\tUSE EDP_DB_TST ;\n//\t\t\tUSE SCHEMA LANDING;\n//\t\t\tcall SPROC_INSTALL_BASE_IB_STG_JNPOS_POSUSR_DIST_PNSN_PRTNR();\n/////////////////////////////////////////////////////////////////////////////////////\n*/\nCREATE OR REPLACE PROCEDURE \"SPROC_INSTALL_BASE_IB_STG_JNPOS_POSUSR_DIST_PNSN_PRTNR\"()\nRETURNS VARCHAR(500)\nLANGUAGE JAVASCRIPT\nEXECUTE AS OWNER\nAS '\n\nvar ib_stg_jnpos_posusr_dist_pnsn_prtnr_mat_table_population_statement = `\n\tCREATE OR REPLACE TRANSIENT TABLE   \"EDP_DB_TST\".\"LANDING\".\"IB_STG_JNPOS_POSUSR_DIST_PNSN_PARTNER\" AS\n\tSELECT DISTINCT * FROM    \"EDP_DB_TST\".\"LANDING\".\"IB_STG_JNPOS_POSUSR_DIST_PNSN_PARTNER_MAT\" \n\t ;\n\n\t\t`\n\n///////////////////// end of ib_stg_jnpos_posusr_dist_pnsn_prtnr_mat_table_population_statement //////////////////////////\t\n\n\nvar statement_ib_stg_jnpos_posusr_dist_pnsn_prtnr_mat_table_population = snowflake.createStatement( {sqlText: ib_stg_jnpos_posusr_dist_pnsn_prtnr_mat_table_population_statement} );\n\nstatement_ib_stg_jnpos_posusr_dist_pnsn_prtnr_mat_table_population.execute();\n\nreturn ''Procedure SPROC_INSTALL_BASE_IB_STG_JNPOS_POSUSR_DIST_PNSN_PRTNR Execution is successful'';\n\n'\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79383":{"id":79383,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-256,"y":-128,"width":32,"height":32,"inputConnectorIDs":[79384,79393],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[79392],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"79382":{"id":79382,"sourceID":79374,"targetID":79377},"79384":{"id":79384,"sourceID":79373,"targetID":79383},"79385":{"id":79385,"sourceID":79376,"targetID":79380},"79386":{"id":79386,"sourceID":79372,"targetID":79374},"79387":{"id":79387,"sourceID":79377,"targetID":79375},"79388":{"id":79388,"sourceID":79380,"targetID":79372},"79389":{"id":79389,"sourceID":79379,"targetID":79373},"79391":{"id":79391,"sourceID":79381,"targetID":79376}},"failureConnectors":{},"unconditionalConnectors":{"79392":{"id":79392,"sourceID":79383,"targetID":79381},"79395":{"id":79395,"sourceID":79370,"targetID":79378}},"trueConnectors":{"79390":{"id":79390,"sourceID":79378,"targetID":79379}},"falseConnectors":{"79393":{"id":79393,"sourceID":79378,"targetID":79383}},"iterationConnectors":{},"noteConnectors":{},"notes":{"79364":{"id":79364,"x":-693,"y":-392,"width":980,"height":53,"text":"**NB:  This ETL should only be ran ONCE. It is destructive and ran just to setup the initial environment.**","colour":"d60000"},"79365":{"id":79365,"x":578,"y":-242,"width":289,"height":181,"text":"``**Step 3**``\n\nInstall sprocs which have dependencies on the VIEW. \nThe stored procedure \"INSTALL_BASE_PRE_SFDC()\" references the view created in the previous step.\n\n","colour":"e6e63c"},"79366":{"id":79366,"x":319,"y":-243,"width":232,"height":187,"text":"``TAKEOFF Schema``\n\nInstall View which is based on Transient table data population","colour":"e6e63c"},"79367":{"id":79367,"x":-29,"y":-244,"width":319,"height":187,"text":"``**Step 1-2**``\n\n``LANDING Schema``\n\nExecute LANDING sprocs and sequentially for Steps 1-2. \nSprocs will populate Transient tables with HVR data.","colour":"e6e63c"},"79368":{"id":79368,"x":895,"y":-260,"width":226,"height":200,"text":"**DELTAS**\nThis sproc just selects back the deltas based on max timestamp in the MetaData control table.\n\nPopulates the** TAKEOFF.INSTALL_BASE_PRE_SFDC** table","colour":"e6e63c"},"79369":{"id":79369,"x":-697,"y":-302,"width":404,"height":265,"text":"Environment var **ev_reset **dependency.\n\n1) when set to Y will reset entire HVR environment.\n2) when set to anything else will popuate INSTALL_BASE_PRE_SFDC based on Meta Data timestamp entry, i.e.create the DELTA.","colour":"e6e63c"},"79371":{"id":79371,"x":1148,"y":-255,"width":308,"height":192,"text":"Backup the Deltas, inserting them into the **LOG **table, in case any reconciliation required.\n\nPopulates the **\"LANDING\".\"INSTALL_BASE_DELTA_LOG**\" table","colour":"e6e63c"}},"variables":{},"grids":{}},"info":{"name":"HVR reference setup","description":"","type":"ORCHESTRATION","tag":"8cf2610a-e476-4252-98d2-b8fb540f7a75"}}