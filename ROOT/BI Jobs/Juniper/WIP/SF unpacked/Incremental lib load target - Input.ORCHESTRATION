{"job":{"components":{"79950":{"id":79950,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-2112089365,"x":160,"y":160,"width":32,"height":32,"inputConnectorIDs":[79966],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log row counts"}}}},"visible":true},"2":{"slot":2,"name":"Metrics","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"inserted"},"2":{"slot":2,"type":"STRING","value":"Numeric"},"3":{"slot":3,"type":"STRING","value":"${logged_rows_inserted}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"deleted"},"2":{"slot":2,"type":"STRING","value":"Numeric"},"3":{"slot":3,"type":"STRING","value":"${logged_rows_deleted}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"updated"},"2":{"slot":2,"type":"STRING","value":"Numeric"},"3":{"slot":3,"type":"STRING","value":"${logged_rows_update}"}}}},"visible":true},"3":{"slot":3,"name":"Namespace","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${target_table_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79951":{"id":79951,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[79967],"outputSuccessConnectorIDs":[79962,79964],"outputFailureConnectorIDs":[79968],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"logged_rows_deleted","mapTo":"logged_rows_deleted"},"2":{"slot":2,"fromId":null,"fromName":"errorMessage","mapTo":"errorMessage"},"3":{"slot":3,"fromId":null,"fromName":"logged_rows_inserted","mapTo":"logged_rows_inserted"},"4":{"slot":4,"fromId":null,"fromName":"logged_rows_update","mapTo":"logged_rows_update"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Transformation Selector"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${transformation_job}"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage_database"},"2":{"slot":2,"type":"STRING","value":"${stage_database}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"stage_dataset"},"2":{"slot":2,"type":"STRING","value":"${stage_dataset}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"stage_project"},"2":{"slot":2,"type":"STRING","value":"${stage_project}"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"stage_schema"},"2":{"slot":2,"type":"STRING","value":"${stage_schema}"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"stage_warehouse"},"2":{"slot":2,"type":"STRING","value":"${stage_warehouse}"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"stage_table_name"},"2":{"slot":2,"type":"STRING","value":"${stage_table_name}"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"target_database"},"2":{"slot":2,"type":"STRING","value":"${target_database}"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"target_dataset"},"2":{"slot":2,"type":"STRING","value":"${target_dataset}"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"target_project"},"2":{"slot":2,"type":"STRING","value":"${target_project}"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"target_schema"},"2":{"slot":2,"type":"STRING","value":"${target_schema}"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"target_warehouse"},"2":{"slot":2,"type":"STRING","value":"${target_warehouse}"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"target_table_name"},"2":{"slot":2,"type":"STRING","value":"${target_table_name}"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"dist_style"},"2":{"slot":2,"type":"STRING","value":"${dist_style}"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"join_statement"},"2":{"slot":2,"type":"STRING","value":"${join_statement}"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"incremental_column"},"2":{"slot":2,"type":"STRING","value":"${incremental_column}"}}},"16":{"slot":16,"values":{"1":{"slot":1,"type":"STRING","value":"sub_RangeStartDate"},"2":{"slot":2,"type":"STRING","value":"${sub_RangeStartDate}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{"1":{"slot":1,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"columns"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"column_name"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"columns"},"2":{"slot":2,"type":"STRING","value":"grid"}}},"2":{"slot":2,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"key_columns"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"column_name"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"key_columns"},"2":{"slot":2,"type":"STRING","value":"grid"}}},"3":{"slot":3,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"target_columns"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"column_name"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"target_columns"},"2":{"slot":2,"type":"STRING","value":"grid"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79952":{"id":79952,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-369209785,"x":-318,"y":2,"width":32,"height":32,"inputConnectorIDs":[79961],"outputSuccessConnectorIDs":[79967],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Append audit columns"}}}},"visible":true},"2":{"slot":2,"name":"Target Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"target_columns"}}}},"visible":true},"3":{"slot":3,"name":"Fixed/Grid","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Fixed"}}}},"visible":true},"4":{"slot":4,"name":"Values Grid","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"MATILLION_BATCH_ID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"MATILLION_UPDATED_TIMESTAMP"}}}},"visible":true},"5":{"slot":5,"name":"Source Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Column Mapping","elements":{},"visible":false},"7":{"slot":7,"name":"Append/Prepend","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Append"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79953":{"id":79953,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-800,"y":0,"width":32,"height":32,"inputConnectorIDs":[79969],"outputSuccessConnectorIDs":[79960],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Validate Input"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"_METRICS = ['TRUE','FALSE']\n\n# ensure the log_metrics component is formatted correctly (UPPER CASE)\nif log_metrics.upper() not in _METRICS:\n  context.updateVariable('log_metrics','TRUE')\nelse:\n  context.updateVariable('log_metrics',log_metrics.upper())\n  \n# dict of possible options the user can select \n# each item represents a Transformation job which will be called\n# if more are added - include a job to be selected and 'desc' (description)\n_OPTIONS = {\n  'TRUNCATE INSERT': {\n    'job':'Incremental lib load target - TRUNCATE INSERT',\n    'desc':'Removes rows from the target data source and loads the entirety of the staging table. Uses the TABLE REWRITE component.'\n    },\n  'APPEND INSERT': {\n    'job': 'Incremental lib load target - APPEND INSERT',\n    'desc':'Adds the rows from the staging table to the target table. Uses the TABLE OUTPUT component.'\n    },\n  'APPEND INSERT-GOOGLE ANALYTICS': {\n    'job': 'Google Analytics Target Table - Load',\n    'desc':'Google Analytics Only - Adds the rows from the staging table to the target table. Compares target to staging and excludes duplicates.'\n    },\n  'UPDATE':{\n    'job': 'Incremental lib load target - UPSERT',\n    'desc':'(UPSERT) Adds new rows from staging and updates any changed rows in the target. Uses the TABLE UPDATE component.'\n    }\n  }\n\n\n# custom exception to be raised if incorrect load method is supplied\nclass InvalidLoadMethodError(Exception):\n  pass \n\n# raise an Exception with a semi-useful message if the type entered does not match any of the _OPTIONS \nif load_strategy.upper() not in _OPTIONS:\n  base_msg = \"Unrecognized input for variable 'load_strategy' ({x}). Please choose one of the following:\".format(x = load_strategy)\n  msgs = []\n  apnd = lambda x: msgs.append(x)\n  \n  # create a message with the Transformation Job descriptions\n  for k,v in _OPTIONS.iteritems():\n    _msg = \"\"\" {x} - {y} \"\"\".format(x = k, y = v['desc'])\n    apnd(_msg)\n\n  info_msg = \"\\n\".join(msgs)\n  \n  msg = \"\\n\".join([base_msg, info_msg])\n  raise InvalidLoadMethodError(msg)\n  \n# otherwise, ensure the load_strategy is capitalized correctly and set the Transformation Job to be selected   \nelse:\n  fixed_type = load_strategy.upper()\n  context.updateVariable('load_strategy',fixed_type)\n  jb = _OPTIONS[load_strategy]['job']\n  context.updateVariable('transformation_job',jb)\n  \n  msg =\\\n\"\"\"Preparing to do a {load_strategy} load from {stage_table_name} into {target_table_name}.\nExecuting transformation job: {transformation_job}.\n\"\"\".format( \n  load_strategy = load_strategy, \n  transformation_job = transformation_job,\n  stage_table_name = stage_table_name,\n  target_table_name = target_table_name)\n\n  print(msg)\n\n# custom exception to be raised if no key columns are supplied but an UPDATE is requested.\nclass MissingKeyColumnError(Exception):\n  pass \n\nif load_strategy=='UPDATE':\n  key_cols = [x[0] for x in context.getGridVariable('key_columns')]\n  if len(key_cols) == 0:\n    _msg =\"In order to do an UPDATE you must specify key column(s)!\"\n    raise MissingKeyColumnError(_msg)\n  \n# Updates in Snowflake are done via a MERGE statement so we need to construct a JOIN statement that works\n# for all input \n  if platform.lower() =='snowflake':   \n  # use target as the target table alias and input as the staging table alias \n    statements = ['\"target\".\"{y}\" = \"input\".\"{y}\"'.format(y=x.upper()) for x in key_cols]\n\n    statement = \"AND \".join(statements) \n    print( \"Created the join statement:\\n{statement}\".format( statement=statement ) )\n    context.updateVariable('join_statement',statement)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79954":{"id":79954,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-369209785,"x":-464,"y":0,"width":32,"height":32,"inputConnectorIDs":[79960],"outputSuccessConnectorIDs":[79961],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Append target columns"}}}},"visible":true},"2":{"slot":2,"name":"Target Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"target_columns"}}}},"visible":true},"3":{"slot":3,"name":"Fixed/Grid","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid"}}}},"visible":true},"4":{"slot":4,"name":"Values Grid","elements":{},"visible":false},"5":{"slot":5,"name":"Source Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"columns"}}}},"visible":true},"6":{"slot":6,"name":"Column Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"column_name"}}}},"visible":true},"7":{"slot":7,"name":"Append/Prepend","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Append"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79955":{"id":79955,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1291941950,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[79962],"outputSuccessConnectorIDs":[79965],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP Staged Table"}}}},"visible":true},"2":{"slot":2,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${stage_database}"}}}},"visible":true},"3":{"slot":3,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${stage_schema}"}}}},"visible":true},"4":{"slot":4,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${stage_table_name}"}}}},"visible":true},"5":{"slot":5,"name":"Ignore Missing","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79956":{"id":79956,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-160,"y":-160,"width":32,"height":32,"inputConnectorIDs":[79968],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Raise Transformation Error"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# custom exception to be raised when the Transformation Job fails\nclass TransformationError(Exception):\n  pass \n\nmsg =\\\n\"\"\"There was an issue executing <job:{transformation_job}> for <table:{target_table_name}>:\n{error_message}\n\"\"\".format( transformation_job = transformation_job,\n        \ttarget_table_name = target_table_name,\n          \terror_message = errorMessage)\nraise TransformationError(msg)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79957":{"id":79957,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1136,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[79969],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79958":{"id":79958,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":0,"y":160,"width":32,"height":32,"inputConnectorIDs":[79963],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[79966],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log Metrics?"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log_metrics"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"TRUE"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"79959":{"id":79959,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":160,"y":0,"width":32,"height":32,"inputConnectorIDs":[79965],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Fin"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"80000":{"id":80000,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-160,"y":160,"width":32,"height":32,"inputConnectorIDs":[79964],"outputSuccessConnectorIDs":[79963],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Adjust Logged Counts"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# BigQuery does not get row counts correctly (always pulls full table row count)\n# must supply a static row count (from the staging table) \n# which will replace the wrongly calculated variable\nif platform.lower()=='bigquery' and log_metrics=='TRUE':\n  context.updateVariable('logged_rows_inserted',static_row_count)\n\n  \nmsg=\\\n\"\"\"## Metrics for {load_strategy} load into {target_table_name} ##\nInserted: {logged_rows_inserted}\nUpdated: {logged_rows_update}\nDeleted: {logged_rows_deleted}\n\"\"\".format(\n  load_strategy = load_strategy,\n  target_table_name = target_table_name,\n  logged_rows_inserted = logged_rows_inserted,\n  logged_rows_update = logged_rows_update,\n  logged_rows_deleted = logged_rows_deleted\n  )\n\nprint(msg)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"79960":{"id":79960,"sourceID":79953,"targetID":79954},"79961":{"id":79961,"sourceID":79954,"targetID":79952},"79962":{"id":79962,"sourceID":79951,"targetID":79955},"79963":{"id":79963,"sourceID":80000,"targetID":79958},"79964":{"id":79964,"sourceID":79951,"targetID":80000},"79965":{"id":79965,"sourceID":79955,"targetID":79959},"79967":{"id":79967,"sourceID":79952,"targetID":79951}},"failureConnectors":{"79968":{"id":79968,"sourceID":79951,"targetID":79956}},"unconditionalConnectors":{"79969":{"id":79969,"sourceID":79957,"targetID":79953}},"trueConnectors":{"79966":{"id":79966,"sourceID":79958,"targetID":79950}},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"79948":{"id":79948,"x":-1037,"y":-188,"width":473,"height":248,"text":"** Validate Input **\nScript to decide which Transformation Job needs to be called.\n\nIterates through a dictionary where the keys are the options for 'load_strategy' variable. Possible options are:\n+ TRUNCATE INSERT - uses staging table rewrite to rebuild the table using staging \n+ UPDATE - uses staging table to update old rows and insert new rows \n+ APPEND INSERT - uses staging to add new rows to the target. \n+ APPEND INSERT-GOOGLE ANALYTICS - invokes special load job** Google Analytics Target Table - Load **which compares staging to target and excludes duplicates.\n\nMetrics can be switched off by amending the **log_metrics** job variable to FALSE in the calling process.","colour":"e6e63c"},"79949":{"id":79949,"x":-539,"y":-74,"width":293,"height":131,"text":"Populate target_columns grid variable containing names of all stage columns plus audit columns","colour":"e6e63c"}},"variables":{"dist_style":{"definition":{"name":"dist_style","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"errorMessage":{"definition":{"name":"errorMessage","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""},"incremental_column":{"definition":{"name":"incremental_column","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"join_statement":{"definition":{"name":"join_statement","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"load_strategy":{"definition":{"name":"load_strategy","type":"TEXT","scope":"BRANCH","description":"The type of WRITE statement to be executed.\nChoices are:\n+ APPEND INSERT\n+ TRUNCATE INSERT\n+ UPDATE\n","visibility":"PUBLIC"},"value":""},"log_metrics":{"definition":{"name":"log_metrics","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"TRUE"},"logged_rows_deleted":{"definition":{"name":"logged_rows_deleted","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"0"},"logged_rows_inserted":{"definition":{"name":"logged_rows_inserted","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"0"},"logged_rows_update":{"definition":{"name":"logged_rows_update","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"0"},"platform":{"definition":{"name":"platform","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_database":{"definition":{"name":"stage_database","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_dataset":{"definition":{"name":"stage_dataset","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_project":{"definition":{"name":"stage_project","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_schema":{"definition":{"name":"stage_schema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_table_name":{"definition":{"name":"stage_table_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_warehouse":{"definition":{"name":"stage_warehouse","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"static_row_count":{"definition":{"name":"static_row_count","type":"DECIMAL","scope":"BRANCH","description":"<b>Require for BigQuery only.<\\b>\nRow count of staging table to be used to adjust the metrics value that is logged.\n","visibility":"PUBLIC"},"value":"0"},"sub_RangeStartDate":{"definition":{"name":"sub_RangeStartDate","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_database":{"definition":{"name":"target_database","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_dataset":{"definition":{"name":"target_dataset","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_project":{"definition":{"name":"target_project","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_schema":{"definition":{"name":"target_schema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_table_name":{"definition":{"name":"target_table_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_warehouse":{"definition":{"name":"target_warehouse","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"transformation_job":{"definition":{"name":"transformation_job","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""}},"grids":{"columns":{"definition":{"name":"columns","scope":"BRANCH","definitions":[{"name":"column_name","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]},"key_columns":{"definition":{"name":"key_columns","scope":"BRANCH","definitions":[{"name":"column_name","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]},"target_columns":{"definition":{"name":"target_columns","scope":"TASKBATCH","definitions":[{"name":"column_name","type":"TEXT"}],"description":"","visibility":"PRIVATE"},"values":[]}}},"info":{"name":"Incremental lib load target - Input","description":"Unpacked from Shared Job [Load Target].","type":"ORCHESTRATION","tag":"33b78a6e-6b05-4f05-b80d-11ee2e521d89"}}