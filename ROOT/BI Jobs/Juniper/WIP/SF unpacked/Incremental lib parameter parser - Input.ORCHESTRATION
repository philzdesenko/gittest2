{"job":{"components":{"1234033":{"id":1234033,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":320,"y":0,"width":32,"height":32,"inputConnectorIDs":[1234043],"outputSuccessConnectorIDs":[1234042],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Chooser"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"# customer error to be raised if user input is incorrect\nclass InputError(Exception):\n  pass \n\nprint(\"Platform: {t}\".format(t = platform))\nsrc = [x for x in context.getGridVariable('source_list')]\ninc_src = [x for x in context.getGridVariable('incremental_source_list')]\n\ntotal_src = len(src)\ntotal_inc = len(inc_src)\n\n# decide which source list to use \n# raises an error if both are empty!\nif all(map(lambda x: x== 0, [total_src,total_inc])):\n  raise InputError('Both sources are empty!')\n\ntest = lambda x: x > 0 \n\n# raises an error if both source_list and incremental_source_list are populated \nif all(map(test,[total_src, total_inc])):\n  msg =\\\n\"\"\"You can only specify a incremental source list or a normal source list - not both!\nTotal rows in incremental source list: {total_inc}\nTotal rows in source list: {total_src}\n\"\"\".format(**{\n  'total_inc':total_inc,\n  'total_src':total_src\n  })\n  raise InputError(msg)\n           \n    \n# decides which source_list to use     \nif total_src > 0:\n  context.updateVariable('is_incremental','FALSE')\n  context.updateVariable('source_list_var','source_list')\nelse:\n  context.updateVariable('is_incremental','TRUE')\n  context.updateVariable('source_list_var','incremental_source_list')\n\nmsg=\\\n\"\"\"Variable 'is_incremental' : {is_incremental}\nVariable 'source_list_var' : {source_list_var}\n\"\"\".format(**{\n    'is_incremental': is_incremental,\n    'source_list_var': source_list_var\n    })\n      \nprint(msg)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1234036":{"id":1234036,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":800,"y":0,"width":32,"height":32,"inputConnectorIDs":[1234037],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Fin"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1234038":{"id":1234038,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1234043],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1234039":{"id":1234039,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":640,"y":0,"width":32,"height":32,"inputConnectorIDs":[1234042],"outputSuccessConnectorIDs":[1234037],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"key_column_count","mapTo":"key_column_count"},"2":{"slot":2,"fromId":null,"fromName":"incremental_column","mapTo":"incremental_column"},"3":{"slot":3,"fromId":null,"fromName":"metadata_stage_table_name","mapTo":"metadata_stage_table_name"},"4":{"slot":4,"fromId":null,"fromName":"SELECT_STRING","mapTo":"SELECT_STRING"},"5":{"slot":5,"fromId":null,"fromName":"get_metadata_sql","mapTo":"stage_table_metadata_sql"},"6":{"slot":6,"fromId":null,"fromName":"column_count","mapTo":"column_count"},"7":{"slot":7,"fromId":null,"fromName":"incremental_column_count","mapTo":"incremental_column_count"},"8":{"slot":8,"fromId":null,"fromName":"stage_table_name","mapTo":"stage_table_name"},"9":{"slot":9,"fromId":null,"fromName":"target_table_name","mapTo":"target_table_name"}},"gridExportMappings":{"1":{"slot":1,"fromGrid":"source_list","toGrid":"source_list","columnMapToFrom":{"column_name":"column","table":"table"}},"2":{"slot":2,"fromGrid":"incremental_source_list","toGrid":"incremental_source_list","columnMapToFrom":{"column_name":"column","incremental":"incremental","key":"key","table":"table"}},"3":{"slot":3,"fromGrid":"key_columns","toGrid":"key_columns","columnMapToFrom":{"column_name":"column_name"}}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Validator"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Incremental lib parameter parser - Parse and Validation"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"source_list_var"},"2":{"slot":2,"type":"STRING","value":"${source_list_var}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"table_name"},"2":{"slot":2,"type":"STRING","value":"${table_name}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"stage_database"},"2":{"slot":2,"type":"STRING","value":"${stage_database}"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"stage_dataset"},"2":{"slot":2,"type":"STRING","value":"${stage_dataset}"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"stage_project"},"2":{"slot":2,"type":"STRING","value":"${stage_project}"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"stage_schema"},"2":{"slot":2,"type":"STRING","value":"${stage_schema}"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"target_database"},"2":{"slot":2,"type":"STRING","value":"${target_database}"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"target_dataset"},"2":{"slot":2,"type":"STRING","value":"${target_dataset}"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"target_project"},"2":{"slot":2,"type":"STRING","value":"${target_project}"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"target_schema"},"2":{"slot":2,"type":"STRING","value":"${target_schema}"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"target_prefix"},"2":{"slot":2,"type":"STRING","value":"${target_prefix}"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"stage_prefix"},"2":{"slot":2,"type":"STRING","value":"${stage_prefix}"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"is_incremental"},"2":{"slot":2,"type":"STRING","value":"${is_incremental}"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"target_platform"},"2":{"slot":2,"type":"STRING","value":"${platform}"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"max_incremental_columns"},"2":{"slot":2,"type":"STRING","value":"${maximum_incremental_columns}"}}},"16":{"slot":16,"values":{"1":{"slot":1,"type":"STRING","value":"source_enclosing_char_e"},"2":{"slot":2,"type":"STRING","value":"${source_enclosing_char_e}"}}},"17":{"slot":17,"values":{"1":{"slot":1,"type":"STRING","value":"source_enclosing_char_s"},"2":{"slot":2,"type":"STRING","value":"${source_enclosing_char_s}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{"1":{"slot":1,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"incremental_source_list"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"table"},"2":{"slot":2,"type":"GRID","value":"column_name"},"3":{"slot":3,"type":"GRID","value":"incremental"},"4":{"slot":4,"type":"GRID","value":"key"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"incremental_source_list"},"2":{"slot":2,"type":"STRING","value":"grid"}}},"3":{"slot":3,"elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"GRID","value":"source_list"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"GRID","value":"table"},"2":{"slot":2,"type":"GRID","value":"column_name"}}}},"values":{"1":{"slot":1,"type":"STRING","value":"source_list"},"2":{"slot":2,"type":"STRING","value":"grid"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"1234037":{"id":1234037,"sourceID":1234039,"targetID":1234036},"1234042":{"id":1234042,"sourceID":1234033,"targetID":1234039}},"failureConnectors":{},"unconditionalConnectors":{"1234043":{"id":1234043,"sourceID":1234038,"targetID":1234033}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"1234012":{"id":1234012,"x":-674,"y":555,"width":240,"height":40,"text":"**IGNORE**","colour":"d60000"},"1234013":{"id":1234013,"x":-432,"y":-383,"width":404,"height":805,"text":"**==================== Parameter Validation Job ====================** \nTop level job to handle the validation and creation of generic variables to be used across all jobs and platforms.\nVariables can then be exported out of this job into other shared jobs.\n\nInput (Input Variables are always Copied and Public so they do not show up on the export, but appear on the the Shared Job parameters):\n\n**Job Variables**\n+ **table_name** (Table Name) - name of the table in the source\n+ **platform** (Platform)- one of 'Redshift','Snowflake','BigQuery' to allow the job to know which variables it should be dealing with\n+ **source_enclosing_char_{s/e}** - The characters to be used to escape column names within the source, defaults to \" \"\n+ **maximum_incremental_columns** - defaults to 1\n+ Target and Stage:\n    -** project **- GCP Project Id\n    -** dataset **- GCP Dataset Id\n    -** warehouse **- Snowflake Warehouse\n    -** database **- Snowflake Database\n    -** schema **- Redshift/Snowflake Schema\n\n**Grid Variables**:\nOne of:\n+ **source_list** - A list of **table **and **column names** for fetching from the source\n+ **incremental_source_list** - A list of **table**, **column names**, **incremental **(whether the column is incremental to be used for fetching from the source) and **key **(indicates if this column is a key for the target table). \nOnly one of these variables should be supplied and the job will figure out which type to parse.\n\n**===============================================================**\nOutput (Output Variables are set to Shared and Public so they can be exported from the Shared Job):\n\n**Job Variables **\n+ **SELECT_STRING** - a string to be supplied within the SELECT clause of an SQL Statement\n+ **stage_table_name** - the name to be used for staging data \n+ **target_table_name** - the name to be used to store the data in the CDW \n+ **incremental_column** - the incremental column being used\n+ **column_count** - the number of columns specified \n+ **incremental_column_count** - the number of incremental columns specified\n+ **stage_table_metadata_sql** - SQL Query to fetch the columns from a metadata table from the source\n\n** Grid Variables **\nDepending on the input, one of the following:\n+ **source_list**\n+ **incremental_source_list** \n\nThe type of grid to be used is set in the calling process.","colour":"00ce4f"},"1234032":{"id":1234032,"x":532,"y":-155,"width":214,"height":232,"text":"Generate the generic grid/job variables. \n\nPerform validation checks ensuring:\n+ At least 1 column is provided;\n+ There are not too many incremental columns (default max = 1);\n+ The target and staging entity are not the same.\nRaise Exceptions if any of these fail.","colour":"e6e63c"},"1234034":{"id":1234034,"x":215,"y":-157,"width":212,"height":232,"text":"Checks that one of the **incremental_source_list** or the **source_list** variables have been specified.\n\nEnsures that only one of these grid variables has been specified.","colour":"e6e63c"},"1234035":{"id":1234035,"x":1047,"y":-506,"width":250,"height":58,"text":"**IGNORE**","colour":"d60000"}},"variables":{"SELECT_STRING":{"definition":{"name":"SELECT_STRING","type":"TEXT","scope":"TASKBATCH","description":"A generated string to be used in the SELECT clause of an SQL statement to fetch data from the table.","visibility":"PUBLIC"},"value":""},"column_count":{"definition":{"name":"column_count","type":"DECIMAL","scope":"TASKBATCH","description":"Count of columns in the iteration.","visibility":"PUBLIC"},"value":""},"incremental_column":{"definition":{"name":"incremental_column","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"incremental_column_count":{"definition":{"name":"incremental_column_count","type":"DECIMAL","scope":"TASKBATCH","description":"Count of (specified) incremental columns in the iteration.","visibility":"PUBLIC"},"value":""},"is_incremental":{"definition":{"name":"is_incremental","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""},"key_column_count":{"definition":{"name":"key_column_count","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"maximum_incremental_columns":{"definition":{"name":"maximum_incremental_columns","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"1"},"metadata_stage_table_name":{"definition":{"name":"metadata_stage_table_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"platform":{"definition":{"name":"platform","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"source_enclosing_char_e":{"definition":{"name":"source_enclosing_char_e","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"\""},"source_enclosing_char_s":{"definition":{"name":"source_enclosing_char_s","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"\""},"source_list_var":{"definition":{"name":"source_list_var","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""},"stage_database":{"definition":{"name":"stage_database","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_dataset":{"definition":{"name":"stage_dataset","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_prefix":{"definition":{"name":"stage_prefix","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_project":{"definition":{"name":"stage_project","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"stage_schema":{"definition":{"name":"stage_schema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"stage_table_metadata_sql":{"definition":{"name":"stage_table_metadata_sql","type":"TEXT","scope":"TASKBATCH","description":"Query to fetch the columns being loaded from the source.","visibility":"PUBLIC"},"value":""},"stage_table_name":{"definition":{"name":"stage_table_name","type":"TEXT","scope":"TASKBATCH","description":"Table name in the CDW to stage the data within.","visibility":"PUBLIC"},"value":""},"stage_warehouse":{"definition":{"name":"stage_warehouse","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"table_name":{"definition":{"name":"table_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_database":{"definition":{"name":"target_database","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_dataset":{"definition":{"name":"target_dataset","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_prefix":{"definition":{"name":"target_prefix","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_project":{"definition":{"name":"target_project","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_schema":{"definition":{"name":"target_schema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"target_table_name":{"definition":{"name":"target_table_name","type":"TEXT","scope":"TASKBATCH","description":"Name of the table to load the data into.","visibility":"PUBLIC"},"value":""},"target_warehouse":{"definition":{"name":"target_warehouse","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{"incremental_source_list":{"definition":{"name":"incremental_source_list","scope":"TASKBATCH","definitions":[{"name":"table","type":"TEXT"},{"name":"column_name","type":"TEXT"},{"name":"incremental","type":"DECIMAL"},{"name":"key","type":"DECIMAL"}],"description":"","visibility":"PUBLIC"},"values":[]},"key_columns":{"definition":{"name":"key_columns","scope":"TASKBATCH","definitions":[{"name":"column_name","type":"TEXT"}],"description":"Key Columns to be exported","visibility":"PUBLIC"},"values":[]},"source_list":{"definition":{"name":"source_list","scope":"TASKBATCH","definitions":[{"name":"table","type":"TEXT"},{"name":"column_name","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"Incremental lib parameter parser - Input","description":"Unpacked from Shared Job [Parameter Parser].","type":"ORCHESTRATION","tag":"c385f353-fd88-467f-b975-e23c53c275c1"}}