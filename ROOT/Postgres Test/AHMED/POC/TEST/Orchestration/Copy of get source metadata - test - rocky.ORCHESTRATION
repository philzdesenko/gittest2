{"job":{"components":{"1229228":{"id":1229228,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":631604974,"x":288,"y":96,"width":32,"height":32,"inputConnectorIDs":[1229265],"outputSuccessConnectorIDs":[1229270],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of JDBC Table Metadata To Grid 0"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PostgreSQL"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jdbc:postgresql://data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com/data_rocky"}}}},"visible":true},"4":{"slot":4,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"app_airflow_dev"}}}},"visible":true},"5":{"slot":5,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${tokenV}"}}}},"visible":true},"6":{"slot":6,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sslmode"},"2":{"slot":2,"type":"STRING","value":"require"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"password"},"2":{"slot":2,"type":"STRING","value":"${tokenV}"}}}},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true},"8":{"slot":8,"name":"Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"table_part"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"source_table_info"}}}},"visible":true},"10":{"slot":10,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Name"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Type"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"Size"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"Precision"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"Primary Key"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Not Null"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"Source Size"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229229":{"id":1229229,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-288,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1229274],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229231":{"id":1229231,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":631604974,"x":288,"y":0,"width":32,"height":32,"inputConnectorIDs":[1229271],"outputSuccessConnectorIDs":[1229264],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"JDBC Table Metadata To Grid 0"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PostgreSQL"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jdbc:postgresql://data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com/data_rocky"}}}},"visible":true},"4":{"slot":4,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"app_airflow_dev"}}}},"visible":true},"5":{"slot":5,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com:5432/?Action=connect&DBUser=app_airflow_dev&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAYVRD2YBFDUA5UOWN%2F20220526%2Feu-west-1%2Frds-db%2Faws4_request&X-Amz-Date=20220526T152024Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJGMEQCICkxIhc%2BTo7CcWj41LZOK4WTUR4GnsvFDvdLkmBXYTv%2FAiBaEpk7TFAkL%2FjgCoSC%2BrT7ZXh1Gt3%2FAOHX4KTrXdO50CrbBAio%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDU5NjAwMTg2NTgwMiIMhRqpxwge%2Fy66m58mKq8EecD7Eep3O3eLVxyYZhIAHPsm1Ue7vo6solGjUfDrlJppU20KA6FrwHpDPZea1a1Dh2xUkakLDRUODIRKzRPgUzeiZuJjSp2Y9MBSb%2FSZ9DxUrMDQNjXtn4jhHhVSuDYhk5iOLipgcF20wvPV8BLYpLWU%2FfjZECm8TvdvH3YsqTqiHXamWIaoYkxn3uDZnGG45LjPyIwKuNIHhqnXk00eFoVsK9wmMXyv1schvtjgnMBfk7ODpNkVyURyXigAxJ1OpSq5noF49mfY5NPZ0QH7zqYKsKCA1%2BDmvxBz6OMsuq8oReAB4Vf%2FNOGc7a573I878O6v2mG0AMGPH96%2B%2F%2BljcxJrQJnK7qn7TFcpk3gGyLsBE82HNy20I8VvpsxmXE8yJHTo6IZG7gYeHcEpr24hmGZn2VlIU3fs%2Fxl9kWtHpYQBfGFBtxczE%2Fs%2BRxeihtdsuPFFBp3Fw4umjEJA8zE%2BcQU4uYKcEDeYDB3MKh6EiTFrbUxa6iwInpMmO4JteL73vEUe0Sj7Rv9o78f5PqEimsnOfLcdlAuaSn6cOGDr7Eo4H4jkmf4%2FMxeV55WBhI6cc5CNiCWBWh9%2B2lXc%2BzGO9zbx4LnOHq%2BTIvT%2BhJZ6VaTULer9c%2BrQdJniuAWzHznqEHH5J%2B2%2BsA14hPX9ISytuG5hBbq7tRZ5qXwqOisDJaACmyR0F3LijwqZGSQ7ls%2FrpHAwru0my9dJ2qhra1vjCHiwdqzKSEESIgSAAhl5VDDvrb6UBjqqAcGxAQvdp4v0Mm89siAS255E7l2VtFSuzi%2Bp0MnNJULAjLdfu0LvVn21unqmcgXrKuVNGDDZTCYQqdEiNbVZNDE7cowpnvAB%2BRK4qrpRFr1ygtGwKAh9FgfgmZjhBm78DQjrSuCm22bY3anDnyH6iS4ddOw%2FPkrsvhi1prqJzFk%2BHFpV14F5is%2FfRABvihbnH%2Fz%2BDnPGtYNNhxCUAe1Kr5EyHRF1p266iM8h&X-Amz-Signature=6f78046974418299f1fd96420f82d05a38a2ec8f2168fb9ac3d9ea3ff2597ab0"}}}},"visible":true},"6":{"slot":6,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sslmode"},"2":{"slot":2,"type":"STRING","value":"require"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"password"},"2":{"slot":2,"type":"STRING","value":"${tokenV}"}}}},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true},"8":{"slot":8,"name":"Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"table_nopart"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"source_table_info"}}}},"visible":true},"10":{"slot":10,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Name"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Type"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"Size"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"Precision"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"Primary Key"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Not Null"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"Source Size"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229248":{"id":1229248,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":496,"y":96,"width":32,"height":32,"inputConnectorIDs":[1229270],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"show results-partition"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nprint (context.getGridVariable('source_table_info'))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229249":{"id":1229249,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":496,"y":192,"width":32,"height":32,"inputConnectorIDs":[1229269],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of show results-partition (2)"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nprint (context.getGridVariable('source_table_info'))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229250":{"id":1229250,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":496,"y":0,"width":32,"height":32,"inputConnectorIDs":[1229264],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"show results- no partition"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nprint (context.getGridVariable('source_table_info'))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229266":{"id":1229266,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-80,"y":0,"width":32,"height":32,"inputConnectorIDs":[1229274],"outputSuccessConnectorIDs":[1229265,1229268,1229271],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Connection Details"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport psycopg2\nimport sys\nimport boto3\nimport os\nimport botocore\nimport datetime\nfrom dateutil.tz import tzlocal\nimport socket\n\ndef get_secret(name):\n    secret_base = \"airflow/connection/\"\n    secret_name = secret_base + name\n    region_name = \"eu-west-1\"\n\n    session = boto3.session.Session()\n    client = session.client(\n        service_name='secretsmanager',\n        region_name=region_name,\n    )\n\n    try:\n        get_secret_value_response = client.get_secret_value(\n            SecretId=secret_name\n        )\n    except ClientError as e:\n        if e.response['Error']['Code'] == 'ResourceNotFoundException':\n            print(\"The requested secret \" + secret_name + \" was not found\")\n        elif e.response['Error']['Code'] == 'InvalidRequestException':\n            print(\"The request was invalid due to:\", e)\n        elif e.response['Error']['Code'] == 'InvalidParameterException':\n            print(\"The request had invalid params:\", e)\n        elif e.response['Error']['Code'] == 'DecryptionFailure':\n            print(\"The requested secret can't be decrypted using the provided KMS key:\", e)\n        elif e.response['Error']['Code'] == 'InternalServiceError':\n            print(\"An error occurred on service side:\", e)\n    else:\n        # Secrets Manager decrypts the secret value using the associated KMS CMK\n        # Depending on whether the secret was a string or binary, only one of these fields will be populated\n        if 'SecretString' in get_secret_value_response:\n            text_secret_data = get_secret_value_response['SecretString']\n        else:\n            binary_secret_data = get_secret_value_response['SecretBinary']\n\n        return get_secret_value_response\n      \n      \n\ndef main():\n\n    ENDPOINT=\"data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com\"\n    PORT=\"5432\"\n    USER=\"app_airflow_dev\"\n    REGION=\"eu-west-1\"\n    DBNAME=\"data_rocky\"\n\n    #gets the credentials from .aws/credentials\n    #session = boto3.Session(profile_name='data-dev-airflow-eks-role') # be-dev-airflow-cross-account-role\n    session = boto3.Session(region_name='eu-west-1')\n    client = session.client('rds')\n\n    token = client.generate_db_auth_token(DBHostname=ENDPOINT, Port=PORT, DBUsername=USER, Region=REGION)\n\n    context.updateVariable('pg_host', ENDPOINT)\n    context.updateVariable('pg_port', PORT)\n    context.updateVariable('pg_user', USER)\n    context.updateVariable('pg_db', DBNAME)\n    context.updateVariable('tokenV', token)\n    context.updateVariable('schema', 'public')\n    context.updateVariable('table_part', 'table_part') \n    context.updateVariable('table_nopart', 'table_nopart') \n\n    print(tokenV)\n    print(pg_host,pg_port,pg_user,pg_db)\n    print(ENDPOINT,PORT,USER,DBNAME)\n\nif __name__ == \"__main__\":\n    main()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1229267":{"id":1229267,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":631604974,"x":288,"y":192,"width":32,"height":32,"inputConnectorIDs":[1229268],"outputSuccessConnectorIDs":[1229269],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of JDBC Table Metadata To Grid 0 (1)"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PostgreSQL"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jdbc:postgresql://postgres-philz.cq5i4y35n9gg.eu-west-1.rds.amazonaws.com:5432/postgres"}}}},"visible":true},"4":{"slot":4,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"postgres"}}}},"visible":true},"5":{"slot":5,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"niSs6rtsa2bgjsxUOyOa"}}}},"visible":true},"6":{"slot":6,"name":"Connection Options","elements":{},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true},"8":{"slot":8,"name":"Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"table_part"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"source_table_info"}}}},"visible":true},"10":{"slot":10,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Name"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Type"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"Size"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"Precision"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"Primary Key"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Not Null"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"Source Size"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"1229264":{"id":1229264,"sourceID":1229231,"targetID":1229250},"1229265":{"id":1229265,"sourceID":1229266,"targetID":1229228},"1229268":{"id":1229268,"sourceID":1229266,"targetID":1229267},"1229269":{"id":1229269,"sourceID":1229267,"targetID":1229249},"1229270":{"id":1229270,"sourceID":1229228,"targetID":1229248},"1229271":{"id":1229271,"sourceID":1229266,"targetID":1229231}},"failureConnectors":{},"unconditionalConnectors":{"1229274":{"id":1229274,"sourceID":1229229,"targetID":1229266}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"pg_db":{"definition":{"name":"pg_db","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"data_rocky"},"pg_host":{"definition":{"name":"pg_host","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com"},"pg_port":{"definition":{"name":"pg_port","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"5432"},"pg_user":{"definition":{"name":"pg_user","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"app_airflow_dev"},"schema":{"definition":{"name":"schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"public"},"table_nopart":{"definition":{"name":"table_nopart","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"login_ip_record_nopart"},"table_part":{"definition":{"name":"table_part","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"login_ip_record_part"},"tokenV":{"definition":{"name":"tokenV","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"data-dev-rocky-db1.c60wdmkvgq29.eu-west-1.rds.amazonaws.com:5432/?Action=connect&DBUser=app_airflow_dev&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAYVRD2YBFJRXSED4S%2F20220527%2Feu-west-1%2Frds-db%2Faws4_request&X-Amz-Date=20220527T083347Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJIMEYCIQDRc8N9RH1zQlUJCiAQkpdHJaCqgCtJW1fUQFQuCgm%2BmwIhAIYc5S15FDLxL3b8%2FjKSDbS%2FiqhP9d1KLGgH56Fpb%2BaZKtsECLn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMNTk2MDAxODY1ODAyIgxT7hojWMvBNMIYSrsqrwS6QzyXsSBAHOFqbqFpkd%2BchD0HXdBUSRy6lNX9sYyG8ZqoKQ5M56XtLTRA%2FeWPD6DiknrcnlSPM%2FUZr3GFZFC2OR%2B4RrU8UBE5vydWcTiabJqNfG6ET14mXh7FDRWHQB0T8SltUbXR9v%2FkK8jVFIzzWD8PIodzPxO5As78tq8klCQ5rOMrlQCwN9JDWnutBP%2FJPdnw1ZXHmJSANorzm2r4QeNOXHObRQH5APw6EhMVv5YVUD6CMHahfIXtns8MJFn8OvuBPvTyA5IhtkY048IJL%2B615PDVC2%2BVBoqHa7thw5eiZOSNCRvVkiy29z1g8DfUJ%2FGtyme3TvhsK%2FjJO7RuKwUyoidgzDCzTNRGXOXm6Bw19YbFGMRCcSIAkWc%2FWqGxkJfS4Y48RGX%2FETft1G8AlUL0Pm5dFb8cRhoReIxA9kW9YLhGxSfNp6buS0b1qOrl%2BWHtOhR%2BYioyZKZshlqhnhfS4IKdqOg7D67jywCAnwstuSocH7%2BMMe59hyf8rmXbSVSTXDzOyW5ZZylMdtU24KpxmjZz2stHJJ%2FnZF2h%2BhDT04myOMAdZHihZf0CGreAUYOd5%2BD9VlrIKEKSuBBW%2Fg7Qp8LI3yCee87VjlSOcRdIzbXe3H9mnzEcVzoh2%2FtvX9SuayS3rTZnIkkgJUlFJRHGqJ9tgO3R%2BYUEnmBMBwfZsVtSxpEIJQpQ3JyTl0h4SrZYCPN%2FpcHA5ueG2ygH7iM5YquspKdY87%2Bfkn%2FaMPeTwpQGOqgBQls8KnzavMe0sdsAjTWRv6ptj64HeU0w5zACVcfv9XdeFhZzx0x3VJCFd2fknELsxcQhdEhUsRdZZzZcr05GDrmC0N0gJgUe%2BZ6QrqZypBl0hdRFDXQQdbgyC0OyeiC6orrlL2xOG9udwJh3FSr2Ed8a6WMTLZ9IcPVzR66phAbGk6yiJr0hFaAYYWh7yh4%2FnSqohPI2JKzJAbOd6saPIsykHqJLekP9&X-Amz-Signature=53b0130fd9e9b2893e7b3b29f64ceea89d1988cb061482660083ec8635fba200"}},"grids":{"source_table_info":{"definition":{"name":"source_table_info","scope":"BRANCH","definitions":[{"name":"Name","type":"TEXT"},{"name":"Type","type":"TEXT"},{"name":"Size","type":"TEXT"},{"name":"Precision","type":"TEXT"},{"name":"PK","type":"TEXT"},{"name":"nullable","type":"TEXT"},{"name":"ordinal","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"Copy of get source metadata - test - rocky","description":"","type":"ORCHESTRATION","tag":"86a339a6-d0de-4c37-87c3-fee87507237a"}}